<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="but_Close.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwqKSaqQT87/zw5Nf88OjX/PDo1/zw6Nf88OjX/PDk1/zw5
        Nf88OjX/RkM//ywrKaoAAAAMAAAAAAAAAAAAAAAeQj87305VYf9cbo3/XnCP/15vj/9ecI//XW6N/11v
        jf9gcY7/YXKP/1VcZ/9GREDeAAAAHQAAAAAAAAAAAAAAHzw5NeBdbo3/krX1/22Itf9ZdJH/bYq1/5e5
        8/98lcD/an6f/3uQs/9mc4j/QD464AAAAB8AAAAAAAAAAAAAAB88OjXgW2yL/1x3lf9Ca07/T4NY/zNK
        Q/9qe5v/lKzP/1xrgP9qe5T/ZnKF/0E+OuAAAAAfAAAAAAAAAAAAAAAfPTs34E9cdv81TU7/Q3FO/zxc
        Q/85P13/RUxu/3KFoP9baoD/a3yW/2Zzhf9BPjrgAAAAHwAAAAAAAAAAAAAAHz07N+BPXHT/MUtv/z9v
        qP9IVWP/oJyU/2Fla/+DmLj/XWyC/2p7lf9mcoX/QT464AAAAB8AAAAAAAAAAAAAAB88OjXgW2yK/196
        pv9Fcab/U2Jz/5iWjv9+jqX/sMz3/6G74v+lv+j/bXqP/0A+OeAAAAAfAAAAAAAAAAAAAAAfPDo14Fts
        iv+Pq9r/a36Z/1Jfc/9vgJn/mLDW/6C54P+gueD/pL7m/216jv9APjngAAAAHwAAAAAAAAAAAAAAHz07
        N+BMWnH/UmF6/0FQVf8+TFH/PkxS/z1LUP88Sk//P01T/3qOrP9pdYj/QD464AAAAB8AAAAAAAAAAAAA
        AB89OzfgSFVr/2p8mv9VZ3H/TV1n/01iYf9LYF//TGBg/1JpaP+yzvv/b32S/0A9OeAAAAAfAAAAAAAA
        AAAAAAAfPTs34EhUa/9tgJ//qMLr/6K74/9TZW//TV5o/01iYv9SaGj/sc35/299kv9APTngAAAAHwAA
        AAAAAAAAAAAAHz07N+BMWXD/eY+w/7nX//+41f//qMPs/6O95f9VZ3H/VWdy/7PQ/P9vfZL/QD054AAA
        AB8AAAAAAAAAAAAAAB88OjXgXm6K/6fD8P+huuH/n7je/6C64P+gud//j6bJ/5Gny/+yzvn/b32S/0A9
        OeAAAAAfAAAAAAAAAAAAAAAfPDo14GJzkP96j7L/UWB5/1NjfP9SYnz/UmJ8/1Rkfv9WZXv/f5Oz/3B+
        k/9APTngAAAAHwAAAAAAAAAAAAAAHkZDP99XXWn/T1hn/1FVWv+ChIL/goSC/4KEgv+DhYP/Vlpc/1Rd
        av9mbHT/SEVC3gAAAB4AAAAAAAAAAAAAAAwsKyirR0RA/z48OP9EQjv/gn90/4OAd/+DgHb/g4F3/0dF
        QP9DQT7/ZGNi/zQyMaoAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwICAjDFRUT+xgXFv8YFxb/GBcW/xgXFv8YFxb/GBcW/xgX
        Fv8YFxb/GBcW/xgXFv8YFxb/GBcW/xgXFv8YFxb/GBcW/xgXFv8YFxb/GBcW/xUUE/sICAfCAAAAOwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCAgIqkhFQf9zb2j/a2dh/2llXv9pZV7/aWVe/2ll
        Xv9pZV7/aWVe/2llXv9pZV7/aWVe/2llXv9pZV7/aWVe/2llXv9pZV7/aWVe/2pmX/9ybmj/fHhy/0tI
        RP8ICAepAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8VFRTbc29o/0lHQ/8kJyz/JSkw/yUp
        MP8lKTD/JSkw/yUpMP8lKTD/JSkw/yUpMP8lKTD/JSkw/yUpMP8lKTD/JSkw/yUpMP8kKTD/JSkw/ycq
        L/9UUk//fHhy/xUUE9sAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgXFt9rZ2H/JCcs/2qF
        s/+Cotr/gaDY/4Gg2P+Codn/gqLa/4Ki2v+Codn/gaDY/4Gg2P+BoNj/gaHZ/4Ki2v+Do9v/haTb/4al
        2/+Hpt3/boe0/ykrMP90cGn/GBcW3wAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGBcW32ll
        Xv8lKTD/gqLa/5i8/f+Xu/z/l7v8/46w7v+Fpd//haXf/46w7v+Xu/z/l7v8/5e8/P+Rs+7/iqjc/5Ct
        3P+Vsd3/mLPd/6G86P+Zs9v/LC80/3FtZ/8YFxbfAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACAYFxbfaWVe/yUpMP+BoNj/l7z8/46w7f9heKL/NENV/yMwNv8jMDb/NENW/2J5o/+Vtu//qsv//3mO
        r/8wOUX/MDdD/zA4Q/8vNkH/T1tu/5GpzP8tMDX/cW1n/xgXFt8AAAAgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIBgXFt9pZV7/JSkw/4Gh2f+Psu//Slx7/x8wKP84Xz//S35U/0x/Vf86X0D/GiQg/1Zl
        fP+uyvT/rcjy/5Srz/+Fmrr/hZq6/4SZuf+RqMv/mbLX/ywvNP9xbWf/GBcW3wAAACAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgGBcW32llXv8lKTD/gaHZ/2J5pP8fMCj/S35U/16cav9enWr/ZKBv/0px
        Uf8cIyn/HyI0/3eKp/+61///gZa1/zQ8Sf8xOUX/MDhD/1Bcb/+RqMz/LTA1/3FtZ/8YFxbfAAAAIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYFxbfaWVe/yUqMf95lsr/NkRX/zphQP9fnmv/X51r/2Wh
        cP9Nc1T/JS02/2Bkrv9UV5n/QUte/6K84/+UrND/hZq6/4Wauv+Embn/kajL/5my1/8sLzT/cW1n/xgX
        Ft8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgXFt9pZV7/Jioy/3CLvP8fKDH/Izol/y5M
        Mv8uTTP/Mks2/w8WEf8bHDT/Q0Z7/zQ2YP8nLTn/aXqT/zQ8SP8xOUX/MTlF/zA4Q/9QXG//kajM/y0w
        Nf9xbWf/GBcW3wAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGBcW32llXv8mKjL/cIu8/x4o
        N/8bNVr/J0l3/zJTff8XJzz/OTcz/3Vza/90cmn/WVdQ/ysvNv+Xr9T/la3R/4Wauv+Fmrr/hJm5/5Go
        y/+Zstf/LC80/3FtZ/8YFxbfAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYFxbfaWVe/yUq
        Mf95lsr/NERd/y5Zk/9boPn/aq///zJUff90cWn/7urb/+3p2/+Sj4X/RU9d/67K9P+AlbT/MjtH/y83
        Q/8uNkH/Tltu/5GozP8tMDX/cW1n/xgXFt8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgX
        Ft9pZV7/JSkw/4Gh2f9heaL/HS9I/1KJzf9qr///MlR9/3Rxaf/t6dv/vrqu/0JCQv92iab/t9T//6zH
        8f+et93/nbbc/5223P+kvub/m7Ta/ywvNP9xbWf/GBcW3wAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAgGBcW32llXv8lKTD/gaHZ/5Cz7/9RYn3/JDZL/0Brnv8lQGD/WVdQ/5KPhf9CQkL/W2qA/63J
        8/+31P//t9T//7jV//+41f//uNX//7nW//+et97/LC80/3FtZ/8YFxbfAAAAIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACAYFxbfaWVe/yUpMP+BoNn/nsH//6rH9P94iqb/QU1g/yUtOf8sMTj/R1Bf/3eK
        qP+vy/X/uNb//7jV//+41f//uNX//7jV//+41f//udb//5633v8sLzT/cW1n/xgXFt8AAAAgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgXFt9pZV7/JSkw/3+e1f+SsOT/nbbd/5+43/+Uq8//ip/B/4mf
        wf+Uq8//n7jf/5+43/+et97/nrfe/5633v+et97/nrfe/5223P+kvub/m7Ta/ywvNP9xbWf/GBcW3wAA
        ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGBcW32llXv8mKjH/co7A/y85Sv8qMTv/Iygx/yAn
        Kv8gKCv/JCoz/yMpMv8fJin/HyYp/yMoMf8jKDH/HyYp/x8mKf8iKDD/LTQ//01ZbP+RqMz/LTA1/3Ft
        Z/8YFxbfAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYFxbfaWVe/yYqMv9sh7f/Jy88/4qg
        wf9OWm7/NEw3/zRMN/9OW27/Tltu/zRMN/80TDf/Tltu/05bbv80TDf/NEw3/01YbP+fuN//pL7m/5u0
        2v8sLzT/cW1n/xgXFt8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgXFt9pZV7/Jioy/2yH
        t/8rNEL/obvi/1tpgP80TDf/NEw3/1xqgf9da4L/PllC/z5ZQv9da4L/XWuC/z5ZQv8+WUL/Wmh//7rX
        //+51v//nrfe/ywvNP9xbWf/GBcW3wAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGBcW32ll
        Xv8mKjL/bIe3/ys0Qv+gud//bn+a/x8mKf8fJyn/b4Cb/1tpgf8+WUL/PllC/1xqgf9caoH/PVlB/z1Z
        Qf9ZZ37/uNb//7jV//+et93/LC80/3FtZ/8YFxbfAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACAYFxbfaWVe/yYqMv9sh7f/KzRC/5633f+uyvT/n7jf/5+43/+vy/X/WWd9/zRLNv80Szb/W2mA/1xq
        gf89WUH/PVlB/1lnfv+41v//uNX//5633f8sLzT/cW1n/xgXFt8AAAAgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIBgXFt9pZV7/Jioy/2yHt/8rNEL/nrfc/7jW//+41f//uNX//7nW//9sfZj/HyYp/x8n
        Kf9vgJv/W2mB/z5ZQv8+WUL/WWd+/7jW//+41f//nrfd/ywvNP9xbWf/GBcW3wAAACAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgGBcW32llXv8mKjL/bIe2/yoyQP+dttz/uNX//7bT//+20///ttP//63I
        8v+fuN//n7jf/6/L9f9ZZ33/NEs2/zRLNv9ZZ33/uNb//7jV//+et93/LC80/3FtZ/8YFxbfAAAAIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYFxbfaWVe/yYqMf9yjb7/SFVr/6O95P+31P//ttP//7bT
        //+20///t9T//7jV//+41f//udb//2x9mP8fJin/Hycp/2x+mP+41f//uNX//5633f8sLzT/cW1n/xgX
        Ft8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgXFt9pZV7/JSkw/4Oh1v+mwu7/tNH9/7jV
        //+41f//uNX//7jV//+41f//uNX//7jV//+41f//rsr0/6C64f+guuH/rsr0/7fU//+41f//nrfd/ywv
        NP9xbWf/GBcW3wAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGBcW32llXv8kKTD/haTZ/7TT
        //+wzPb/oLng/5223P+dttz/nbbc/5223P+dttz/nbbc/5223P+et93/n7jf/5+43v+huuH/sMv2/7jV
        //+et93/LC80/3FtZ/8YFxbfAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYFxbfaWVe/yQo
        MP+GpNr/rcr3/2Bvhv8vNkL/MDdD/zA3Q/8wN0P/MDdD/zA3Q/8wN0P/MDdD/zA3Q/8wN0P/MDdD/y82
        Qf9gb4b/sc34/5643v8sLzT/cW1n/xgXFt8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgX
        Ft9qZl//JSkw/4in3f+eueP/LTVB/26Eqv97lL3/eJC4/3iQuP94kLj/eJC4/3iQuP94kLj/eJC4/3qR
        uP+GnL//e4+s/y82Qf+jveT/oLrh/ywvNP9xbWf/GBcW3wAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAgGBcW33JuZ/8nKi//b4m2/4qix/8mLTn/N0Rb/y40Pf8vMzn/LzM5/y8zOf8vMzn/LzM5/y8z
        Of8vMzn/LzM5/zM3Pf9DTl3/KS86/46lyP+CmLj/Ky0w/3Rwaf8YFxbfAAAAIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB8VFBPbfHhy/1RSTv8oKy//QERK/0JERv8bGhj/mpaH/7y3pf+8t6b/vLem/7y3
        pv+8t6b/vLem/7y3pv+9uaf/nJiK/xwcGv9ERkj/QkZM/zU4PP9fXVv/fXlz/xUUE9sAAAAfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADwgIB6tLSEX/fHhy/3Rwaf93c2z/bmpk/yYlIv+bl4n/xcGy/8jF
        uP/Ixbj/yMW4/8jFuP/Ixbj/yMW4/8rGuf+mo5j/KCcl/29rZf9+enT/rq2s/7m4tv9SUE3/BwcGqQAA
        AA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAgIB8QVFBP7GBcW/xgXFv8UFBL/BwYG/xgX
        Ff8hIR//IiEf/yIhH/8iIR//IiEf/yIhH/8iIR//IiEf/xoaGP8HBwb/FBMS/xkZF/8kJCT/IiIi+woK
        CsQAAAA8AAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAAB
</value>
  </data>
</root>