//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LawtechPTSystem {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_Triff")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_Triff : global::System.Data.DataSet {
        
        private V_nTriffListDataTable tableV_nTriffList;
        
        private PhaseTDataTable tablePhaseT;
        
        private nTriffTDataTable tablenTriffT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSet_Triff() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSet_Triff(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["V_nTriffList"] != null)) {
                    base.Tables.Add(new V_nTriffListDataTable(ds.Tables["V_nTriffList"]));
                }
                if ((ds.Tables["PhaseT"] != null)) {
                    base.Tables.Add(new PhaseTDataTable(ds.Tables["PhaseT"]));
                }
                if ((ds.Tables["nTriffT"] != null)) {
                    base.Tables.Add(new nTriffTDataTable(ds.Tables["nTriffT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_nTriffListDataTable V_nTriffList {
            get {
                return this.tableV_nTriffList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PhaseTDataTable PhaseT {
            get {
                return this.tablePhaseT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public nTriffTDataTable nTriffT {
            get {
                return this.tablenTriffT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet_Triff cln = ((DataSet_Triff)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["V_nTriffList"] != null)) {
                    base.Tables.Add(new V_nTriffListDataTable(ds.Tables["V_nTriffList"]));
                }
                if ((ds.Tables["PhaseT"] != null)) {
                    base.Tables.Add(new PhaseTDataTable(ds.Tables["PhaseT"]));
                }
                if ((ds.Tables["nTriffT"] != null)) {
                    base.Tables.Add(new nTriffTDataTable(ds.Tables["nTriffT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableV_nTriffList = ((V_nTriffListDataTable)(base.Tables["V_nTriffList"]));
            if ((initTable == true)) {
                if ((this.tableV_nTriffList != null)) {
                    this.tableV_nTriffList.InitVars();
                }
            }
            this.tablePhaseT = ((PhaseTDataTable)(base.Tables["PhaseT"]));
            if ((initTable == true)) {
                if ((this.tablePhaseT != null)) {
                    this.tablePhaseT.InitVars();
                }
            }
            this.tablenTriffT = ((nTriffTDataTable)(base.Tables["nTriffT"]));
            if ((initTable == true)) {
                if ((this.tablenTriffT != null)) {
                    this.tablenTriffT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet_Triff";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_Triff.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableV_nTriffList = new V_nTriffListDataTable();
            base.Tables.Add(this.tableV_nTriffList);
            this.tablePhaseT = new PhaseTDataTable();
            base.Tables.Add(this.tablePhaseT);
            this.tablenTriffT = new nTriffTDataTable();
            base.Tables.Add(this.tablenTriffT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeV_nTriffList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePhaseT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializenTriffT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_Triff ds = new DataSet_Triff();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void V_nTriffListRowChangeEventHandler(object sender, V_nTriffListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PhaseTRowChangeEventHandler(object sender, PhaseTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void nTriffTRowChangeEventHandler(object sender, nTriffTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_nTriffListDataTable : global::System.Data.TypedTableBase<V_nTriffListRow> {
            
            private global::System.Data.DataColumn columnFeeSN;
            
            private global::System.Data.DataColumn columnSort;
            
            private global::System.Data.DataColumn columnCountrySymbol;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnKindSN;
            
            private global::System.Data.DataColumn columnKind;
            
            private global::System.Data.DataColumn columnProcedureName;
            
            private global::System.Data.DataColumn columnProcedureName_CHS;
            
            private global::System.Data.DataColumn columnProcedureName_EN;
            
            private global::System.Data.DataColumn columnPhaseKEY;
            
            private global::System.Data.DataColumn columnPhaseName;
            
            private global::System.Data.DataColumn columnExamtime;
            
            private global::System.Data.DataColumn columnGovFee;
            
            private global::System.Data.DataColumn columnGovFeeNT;
            
            private global::System.Data.DataColumn columnMoneyKindG;
            
            private global::System.Data.DataColumn columnAttorneyKey;
            
            private global::System.Data.DataColumn columnAttorneyFee;
            
            private global::System.Data.DataColumn columnAttorneySymbol;
            
            private global::System.Data.DataColumn columnAttorneyFirm;
            
            private global::System.Data.DataColumn columnAttorneyELFeeNT;
            
            private global::System.Data.DataColumn columnAttorneyElseFee;
            
            private global::System.Data.DataColumn columnAttorneyElseFeeNT;
            
            private global::System.Data.DataColumn columnNotifyFee;
            
            private global::System.Data.DataColumn columnNotifyFeeNT;
            
            private global::System.Data.DataColumn columnMoneyKind;
            
            private global::System.Data.DataColumn columnTranFee;
            
            private global::System.Data.DataColumn columnWriteFee;
            
            private global::System.Data.DataColumn columnSafeFee;
            
            private global::System.Data.DataColumn columnAttorneyFeeNT;
            
            private global::System.Data.DataColumn columnAttorneyGovFee;
            
            private global::System.Data.DataColumn columnMeFee;
            
            private global::System.Data.DataColumn columnTotall;
            
            private global::System.Data.DataColumn columnQuotaTotal;
            
            private global::System.Data.DataColumn columnSignDocument;
            
            private global::System.Data.DataColumn columnToNT;
            
            private global::System.Data.DataColumn columnToNTG;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRemark_CHS;
            
            private global::System.Data.DataColumn columnRemark_EN;
            
            private global::System.Data.DataColumn columnMeRemark;
            
            private global::System.Data.DataColumn columnMeRemark_CHS;
            
            private global::System.Data.DataColumn columnMeRemark_EN;
            
            private global::System.Data.DataColumn columnGain;
            
            private global::System.Data.DataColumn columnLargeEntity;
            
            private global::System.Data.DataColumn columnForStander;
            
            private global::System.Data.DataColumn columnNofityContent;
            
            private global::System.Data.DataColumn columnBeforeTotal;
            
            private global::System.Data.DataColumn columnAfterProcess;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public V_nTriffListDataTable() {
                this.TableName = "V_nTriffList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal V_nTriffListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected V_nTriffListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FeeSNColumn {
                get {
                    return this.columnFeeSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SortColumn {
                get {
                    return this.columnSort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CountrySymbolColumn {
                get {
                    return this.columnCountrySymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KindSNColumn {
                get {
                    return this.columnKindSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KindColumn {
                get {
                    return this.columnKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProcedureNameColumn {
                get {
                    return this.columnProcedureName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProcedureName_CHSColumn {
                get {
                    return this.columnProcedureName_CHS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProcedureName_ENColumn {
                get {
                    return this.columnProcedureName_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhaseKEYColumn {
                get {
                    return this.columnPhaseKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhaseNameColumn {
                get {
                    return this.columnPhaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExamtimeColumn {
                get {
                    return this.columnExamtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GovFeeColumn {
                get {
                    return this.columnGovFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GovFeeNTColumn {
                get {
                    return this.columnGovFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MoneyKindGColumn {
                get {
                    return this.columnMoneyKindG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyKeyColumn {
                get {
                    return this.columnAttorneyKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyFeeColumn {
                get {
                    return this.columnAttorneyFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneySymbolColumn {
                get {
                    return this.columnAttorneySymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyFirmColumn {
                get {
                    return this.columnAttorneyFirm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyELFeeNTColumn {
                get {
                    return this.columnAttorneyELFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyElseFeeColumn {
                get {
                    return this.columnAttorneyElseFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyElseFeeNTColumn {
                get {
                    return this.columnAttorneyElseFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NotifyFeeColumn {
                get {
                    return this.columnNotifyFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NotifyFeeNTColumn {
                get {
                    return this.columnNotifyFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MoneyKindColumn {
                get {
                    return this.columnMoneyKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TranFeeColumn {
                get {
                    return this.columnTranFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WriteFeeColumn {
                get {
                    return this.columnWriteFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SafeFeeColumn {
                get {
                    return this.columnSafeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyFeeNTColumn {
                get {
                    return this.columnAttorneyFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyGovFeeColumn {
                get {
                    return this.columnAttorneyGovFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeFeeColumn {
                get {
                    return this.columnMeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotallColumn {
                get {
                    return this.columnTotall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QuotaTotalColumn {
                get {
                    return this.columnQuotaTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SignDocumentColumn {
                get {
                    return this.columnSignDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ToNTColumn {
                get {
                    return this.columnToNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ToNTGColumn {
                get {
                    return this.columnToNTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Remark_CHSColumn {
                get {
                    return this.columnRemark_CHS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Remark_ENColumn {
                get {
                    return this.columnRemark_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeRemarkColumn {
                get {
                    return this.columnMeRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeRemark_CHSColumn {
                get {
                    return this.columnMeRemark_CHS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeRemark_ENColumn {
                get {
                    return this.columnMeRemark_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GainColumn {
                get {
                    return this.columnGain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LargeEntityColumn {
                get {
                    return this.columnLargeEntity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ForStanderColumn {
                get {
                    return this.columnForStander;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NofityContentColumn {
                get {
                    return this.columnNofityContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BeforeTotalColumn {
                get {
                    return this.columnBeforeTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AfterProcessColumn {
                get {
                    return this.columnAfterProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public V_nTriffListRow this[int index] {
                get {
                    return ((V_nTriffListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event V_nTriffListRowChangeEventHandler V_nTriffListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event V_nTriffListRowChangeEventHandler V_nTriffListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event V_nTriffListRowChangeEventHandler V_nTriffListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event V_nTriffListRowChangeEventHandler V_nTriffListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddV_nTriffListRow(V_nTriffListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public V_nTriffListRow AddV_nTriffListRow(
                        int FeeSN, 
                        int Sort, 
                        string CountrySymbol, 
                        string Country, 
                        string KindSN, 
                        string Kind, 
                        string ProcedureName, 
                        string ProcedureName_CHS, 
                        string ProcedureName_EN, 
                        int PhaseKEY, 
                        string PhaseName, 
                        string Examtime, 
                        decimal GovFee, 
                        decimal GovFeeNT, 
                        string MoneyKindG, 
                        int AttorneyKey, 
                        decimal AttorneyFee, 
                        string AttorneySymbol, 
                        string AttorneyFirm, 
                        decimal AttorneyELFeeNT, 
                        decimal AttorneyElseFee, 
                        decimal AttorneyElseFeeNT, 
                        decimal NotifyFee, 
                        decimal NotifyFeeNT, 
                        string MoneyKind, 
                        decimal TranFee, 
                        decimal WriteFee, 
                        decimal SafeFee, 
                        decimal AttorneyFeeNT, 
                        decimal AttorneyGovFee, 
                        decimal MeFee, 
                        decimal Totall, 
                        decimal QuotaTotal, 
                        string SignDocument, 
                        decimal ToNT, 
                        decimal ToNTG, 
                        string Remark, 
                        string Remark_CHS, 
                        string Remark_EN, 
                        string MeRemark, 
                        string MeRemark_CHS, 
                        string MeRemark_EN, 
                        decimal Gain, 
                        bool LargeEntity, 
                        bool ForStander, 
                        string NofityContent, 
                        decimal BeforeTotal, 
                        string AfterProcess) {
                V_nTriffListRow rowV_nTriffListRow = ((V_nTriffListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FeeSN,
                        Sort,
                        CountrySymbol,
                        Country,
                        KindSN,
                        Kind,
                        ProcedureName,
                        ProcedureName_CHS,
                        ProcedureName_EN,
                        PhaseKEY,
                        PhaseName,
                        Examtime,
                        GovFee,
                        GovFeeNT,
                        MoneyKindG,
                        AttorneyKey,
                        AttorneyFee,
                        AttorneySymbol,
                        AttorneyFirm,
                        AttorneyELFeeNT,
                        AttorneyElseFee,
                        AttorneyElseFeeNT,
                        NotifyFee,
                        NotifyFeeNT,
                        MoneyKind,
                        TranFee,
                        WriteFee,
                        SafeFee,
                        AttorneyFeeNT,
                        AttorneyGovFee,
                        MeFee,
                        Totall,
                        QuotaTotal,
                        SignDocument,
                        ToNT,
                        ToNTG,
                        Remark,
                        Remark_CHS,
                        Remark_EN,
                        MeRemark,
                        MeRemark_CHS,
                        MeRemark_EN,
                        Gain,
                        LargeEntity,
                        ForStander,
                        NofityContent,
                        BeforeTotal,
                        AfterProcess};
                rowV_nTriffListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_nTriffListRow);
                return rowV_nTriffListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public V_nTriffListRow FindByFeeSN(int FeeSN) {
                return ((V_nTriffListRow)(this.Rows.Find(new object[] {
                            FeeSN})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                V_nTriffListDataTable cln = ((V_nTriffListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_nTriffListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFeeSN = base.Columns["FeeSN"];
                this.columnSort = base.Columns["Sort"];
                this.columnCountrySymbol = base.Columns["CountrySymbol"];
                this.columnCountry = base.Columns["Country"];
                this.columnKindSN = base.Columns["KindSN"];
                this.columnKind = base.Columns["Kind"];
                this.columnProcedureName = base.Columns["ProcedureName"];
                this.columnProcedureName_CHS = base.Columns["ProcedureName_CHS"];
                this.columnProcedureName_EN = base.Columns["ProcedureName_EN"];
                this.columnPhaseKEY = base.Columns["PhaseKEY"];
                this.columnPhaseName = base.Columns["PhaseName"];
                this.columnExamtime = base.Columns["Examtime"];
                this.columnGovFee = base.Columns["GovFee"];
                this.columnGovFeeNT = base.Columns["GovFeeNT"];
                this.columnMoneyKindG = base.Columns["MoneyKindG"];
                this.columnAttorneyKey = base.Columns["AttorneyKey"];
                this.columnAttorneyFee = base.Columns["AttorneyFee"];
                this.columnAttorneySymbol = base.Columns["AttorneySymbol"];
                this.columnAttorneyFirm = base.Columns["AttorneyFirm"];
                this.columnAttorneyELFeeNT = base.Columns["AttorneyELFeeNT"];
                this.columnAttorneyElseFee = base.Columns["AttorneyElseFee"];
                this.columnAttorneyElseFeeNT = base.Columns["AttorneyElseFeeNT"];
                this.columnNotifyFee = base.Columns["NotifyFee"];
                this.columnNotifyFeeNT = base.Columns["NotifyFeeNT"];
                this.columnMoneyKind = base.Columns["MoneyKind"];
                this.columnTranFee = base.Columns["TranFee"];
                this.columnWriteFee = base.Columns["WriteFee"];
                this.columnSafeFee = base.Columns["SafeFee"];
                this.columnAttorneyFeeNT = base.Columns["AttorneyFeeNT"];
                this.columnAttorneyGovFee = base.Columns["AttorneyGovFee"];
                this.columnMeFee = base.Columns["MeFee"];
                this.columnTotall = base.Columns["Totall"];
                this.columnQuotaTotal = base.Columns["QuotaTotal"];
                this.columnSignDocument = base.Columns["SignDocument"];
                this.columnToNT = base.Columns["ToNT"];
                this.columnToNTG = base.Columns["ToNTG"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRemark_CHS = base.Columns["Remark_CHS"];
                this.columnRemark_EN = base.Columns["Remark_EN"];
                this.columnMeRemark = base.Columns["MeRemark"];
                this.columnMeRemark_CHS = base.Columns["MeRemark_CHS"];
                this.columnMeRemark_EN = base.Columns["MeRemark_EN"];
                this.columnGain = base.Columns["Gain"];
                this.columnLargeEntity = base.Columns["LargeEntity"];
                this.columnForStander = base.Columns["ForStander"];
                this.columnNofityContent = base.Columns["NofityContent"];
                this.columnBeforeTotal = base.Columns["BeforeTotal"];
                this.columnAfterProcess = base.Columns["AfterProcess"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFeeSN = new global::System.Data.DataColumn("FeeSN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeeSN);
                this.columnSort = new global::System.Data.DataColumn("Sort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSort);
                this.columnCountrySymbol = new global::System.Data.DataColumn("CountrySymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountrySymbol);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnKindSN = new global::System.Data.DataColumn("KindSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKindSN);
                this.columnKind = new global::System.Data.DataColumn("Kind", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKind);
                this.columnProcedureName = new global::System.Data.DataColumn("ProcedureName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureName);
                this.columnProcedureName_CHS = new global::System.Data.DataColumn("ProcedureName_CHS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureName_CHS);
                this.columnProcedureName_EN = new global::System.Data.DataColumn("ProcedureName_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureName_EN);
                this.columnPhaseKEY = new global::System.Data.DataColumn("PhaseKEY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseKEY);
                this.columnPhaseName = new global::System.Data.DataColumn("PhaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseName);
                this.columnExamtime = new global::System.Data.DataColumn("Examtime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamtime);
                this.columnGovFee = new global::System.Data.DataColumn("GovFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGovFee);
                this.columnGovFeeNT = new global::System.Data.DataColumn("GovFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGovFeeNT);
                this.columnMoneyKindG = new global::System.Data.DataColumn("MoneyKindG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyKindG);
                this.columnAttorneyKey = new global::System.Data.DataColumn("AttorneyKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyKey);
                this.columnAttorneyFee = new global::System.Data.DataColumn("AttorneyFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyFee);
                this.columnAttorneySymbol = new global::System.Data.DataColumn("AttorneySymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneySymbol);
                this.columnAttorneyFirm = new global::System.Data.DataColumn("AttorneyFirm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyFirm);
                this.columnAttorneyELFeeNT = new global::System.Data.DataColumn("AttorneyELFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyELFeeNT);
                this.columnAttorneyElseFee = new global::System.Data.DataColumn("AttorneyElseFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyElseFee);
                this.columnAttorneyElseFeeNT = new global::System.Data.DataColumn("AttorneyElseFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyElseFeeNT);
                this.columnNotifyFee = new global::System.Data.DataColumn("NotifyFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyFee);
                this.columnNotifyFeeNT = new global::System.Data.DataColumn("NotifyFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyFeeNT);
                this.columnMoneyKind = new global::System.Data.DataColumn("MoneyKind", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyKind);
                this.columnTranFee = new global::System.Data.DataColumn("TranFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranFee);
                this.columnWriteFee = new global::System.Data.DataColumn("WriteFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWriteFee);
                this.columnSafeFee = new global::System.Data.DataColumn("SafeFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafeFee);
                this.columnAttorneyFeeNT = new global::System.Data.DataColumn("AttorneyFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyFeeNT);
                this.columnAttorneyGovFee = new global::System.Data.DataColumn("AttorneyGovFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyGovFee);
                this.columnMeFee = new global::System.Data.DataColumn("MeFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeFee);
                this.columnTotall = new global::System.Data.DataColumn("Totall", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotall);
                this.columnQuotaTotal = new global::System.Data.DataColumn("QuotaTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotaTotal);
                this.columnSignDocument = new global::System.Data.DataColumn("SignDocument", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignDocument);
                this.columnToNT = new global::System.Data.DataColumn("ToNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToNT);
                this.columnToNTG = new global::System.Data.DataColumn("ToNTG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToNTG);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRemark_CHS = new global::System.Data.DataColumn("Remark_CHS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark_CHS);
                this.columnRemark_EN = new global::System.Data.DataColumn("Remark_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark_EN);
                this.columnMeRemark = new global::System.Data.DataColumn("MeRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeRemark);
                this.columnMeRemark_CHS = new global::System.Data.DataColumn("MeRemark_CHS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeRemark_CHS);
                this.columnMeRemark_EN = new global::System.Data.DataColumn("MeRemark_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeRemark_EN);
                this.columnGain = new global::System.Data.DataColumn("Gain", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGain);
                this.columnLargeEntity = new global::System.Data.DataColumn("LargeEntity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLargeEntity);
                this.columnForStander = new global::System.Data.DataColumn("ForStander", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForStander);
                this.columnNofityContent = new global::System.Data.DataColumn("NofityContent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNofityContent);
                this.columnBeforeTotal = new global::System.Data.DataColumn("BeforeTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeforeTotal);
                this.columnAfterProcess = new global::System.Data.DataColumn("AfterProcess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfterProcess);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeeSN}, true));
                this.columnFeeSN.AllowDBNull = false;
                this.columnFeeSN.Unique = true;
                this.columnCountrySymbol.MaxLength = 100;
                this.columnCountry.MaxLength = 16;
                this.columnKindSN.MaxLength = 20;
                this.columnKind.MaxLength = 20;
                this.columnProcedureName.MaxLength = 100;
                this.columnProcedureName_CHS.MaxLength = 1000;
                this.columnProcedureName_EN.MaxLength = 2000;
                this.columnPhaseName.MaxLength = 30;
                this.columnExamtime.MaxLength = 500;
                this.columnMoneyKindG.MaxLength = 10;
                this.columnAttorneySymbol.MaxLength = 20;
                this.columnAttorneyFirm.MaxLength = 300;
                this.columnMoneyKind.MaxLength = 10;
                this.columnSignDocument.MaxLength = 120;
                this.columnRemark.MaxLength = 4000;
                this.columnRemark_CHS.MaxLength = 4000;
                this.columnRemark_EN.MaxLength = 4000;
                this.columnMeRemark.MaxLength = 4000;
                this.columnMeRemark_CHS.MaxLength = 4000;
                this.columnMeRemark_EN.MaxLength = 4000;
                this.columnNofityContent.MaxLength = 200;
                this.columnAfterProcess.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public V_nTriffListRow NewV_nTriffListRow() {
                return ((V_nTriffListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_nTriffListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(V_nTriffListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_nTriffListRowChanged != null)) {
                    this.V_nTriffListRowChanged(this, new V_nTriffListRowChangeEvent(((V_nTriffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_nTriffListRowChanging != null)) {
                    this.V_nTriffListRowChanging(this, new V_nTriffListRowChangeEvent(((V_nTriffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_nTriffListRowDeleted != null)) {
                    this.V_nTriffListRowDeleted(this, new V_nTriffListRowChangeEvent(((V_nTriffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_nTriffListRowDeleting != null)) {
                    this.V_nTriffListRowDeleting(this, new V_nTriffListRowChangeEvent(((V_nTriffListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveV_nTriffListRow(V_nTriffListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Triff ds = new DataSet_Triff();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_nTriffListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PhaseTDataTable : global::System.Data.TypedTableBase<PhaseTRow> {
            
            private global::System.Data.DataColumn columnPhaseKey;
            
            private global::System.Data.DataColumn columnSort;
            
            private global::System.Data.DataColumn columnPhaseName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PhaseTDataTable() {
                this.TableName = "PhaseT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PhaseTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PhaseTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhaseKeyColumn {
                get {
                    return this.columnPhaseKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SortColumn {
                get {
                    return this.columnSort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhaseNameColumn {
                get {
                    return this.columnPhaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PhaseTRow this[int index] {
                get {
                    return ((PhaseTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PhaseTRowChangeEventHandler PhaseTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PhaseTRowChangeEventHandler PhaseTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PhaseTRowChangeEventHandler PhaseTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PhaseTRowChangeEventHandler PhaseTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPhaseTRow(PhaseTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PhaseTRow AddPhaseTRow(int Sort, string PhaseName) {
                PhaseTRow rowPhaseTRow = ((PhaseTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Sort,
                        PhaseName};
                rowPhaseTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPhaseTRow);
                return rowPhaseTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PhaseTRow FindByPhaseKey(int PhaseKey) {
                return ((PhaseTRow)(this.Rows.Find(new object[] {
                            PhaseKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PhaseTDataTable cln = ((PhaseTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PhaseTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPhaseKey = base.Columns["PhaseKey"];
                this.columnSort = base.Columns["Sort"];
                this.columnPhaseName = base.Columns["PhaseName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPhaseKey = new global::System.Data.DataColumn("PhaseKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseKey);
                this.columnSort = new global::System.Data.DataColumn("Sort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSort);
                this.columnPhaseName = new global::System.Data.DataColumn("PhaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPhaseKey}, true));
                this.columnPhaseKey.AutoIncrement = true;
                this.columnPhaseKey.AutoIncrementSeed = -1;
                this.columnPhaseKey.AutoIncrementStep = -1;
                this.columnPhaseKey.AllowDBNull = false;
                this.columnPhaseKey.ReadOnly = true;
                this.columnPhaseKey.Unique = true;
                this.columnPhaseName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PhaseTRow NewPhaseTRow() {
                return ((PhaseTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PhaseTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PhaseTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PhaseTRowChanged != null)) {
                    this.PhaseTRowChanged(this, new PhaseTRowChangeEvent(((PhaseTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PhaseTRowChanging != null)) {
                    this.PhaseTRowChanging(this, new PhaseTRowChangeEvent(((PhaseTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PhaseTRowDeleted != null)) {
                    this.PhaseTRowDeleted(this, new PhaseTRowChangeEvent(((PhaseTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PhaseTRowDeleting != null)) {
                    this.PhaseTRowDeleting(this, new PhaseTRowChangeEvent(((PhaseTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePhaseTRow(PhaseTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Triff ds = new DataSet_Triff();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PhaseTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class nTriffTDataTable : global::System.Data.TypedTableBase<nTriffTRow> {
            
            private global::System.Data.DataColumn columnFeeSN;
            
            private global::System.Data.DataColumn columnSort;
            
            private global::System.Data.DataColumn columnCountrySymbol;
            
            private global::System.Data.DataColumn columnKindSN;
            
            private global::System.Data.DataColumn columnProcedureName;
            
            private global::System.Data.DataColumn columnProcedureName_CHS;
            
            private global::System.Data.DataColumn columnProcedureName_EN;
            
            private global::System.Data.DataColumn columnPhaseKEY;
            
            private global::System.Data.DataColumn columnExamtime;
            
            private global::System.Data.DataColumn columnGovFee;
            
            private global::System.Data.DataColumn columnGovFeeNT;
            
            private global::System.Data.DataColumn columnMoneyKindG;
            
            private global::System.Data.DataColumn columnAttorneyKey;
            
            private global::System.Data.DataColumn columnAttorneyFee;
            
            private global::System.Data.DataColumn columnAttorneyELFeeNT;
            
            private global::System.Data.DataColumn columnAttorneyElseFee;
            
            private global::System.Data.DataColumn columnAttorneyElseFeeNT;
            
            private global::System.Data.DataColumn columnNotifyFee;
            
            private global::System.Data.DataColumn columnNotifyFeeNT;
            
            private global::System.Data.DataColumn columnMoneyKind;
            
            private global::System.Data.DataColumn columnTranFee;
            
            private global::System.Data.DataColumn columnWriteFee;
            
            private global::System.Data.DataColumn columnSafeFee;
            
            private global::System.Data.DataColumn columnAttorneyFeeNT;
            
            private global::System.Data.DataColumn columnAttorneyGovFee;
            
            private global::System.Data.DataColumn columnMeFee;
            
            private global::System.Data.DataColumn columnTotall;
            
            private global::System.Data.DataColumn columnQuotaTotal;
            
            private global::System.Data.DataColumn columnSignDocument;
            
            private global::System.Data.DataColumn columnToNT;
            
            private global::System.Data.DataColumn columnToNTG;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRemark_CHS;
            
            private global::System.Data.DataColumn columnRemark_EN;
            
            private global::System.Data.DataColumn columnMeRemark;
            
            private global::System.Data.DataColumn columnMeRemark_CHS;
            
            private global::System.Data.DataColumn columnMeRemark_EN;
            
            private global::System.Data.DataColumn columnGain;
            
            private global::System.Data.DataColumn columnLargeEntity;
            
            private global::System.Data.DataColumn columnForStander;
            
            private global::System.Data.DataColumn columnNofityContent;
            
            private global::System.Data.DataColumn columnBeforeTotal;
            
            private global::System.Data.DataColumn columnAfterProcess;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnLastModifyDateTime;
            
            private global::System.Data.DataColumn columnAttorneyFirm;
            
            private global::System.Data.DataColumn columnPhaseName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public nTriffTDataTable() {
                this.TableName = "nTriffT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal nTriffTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected nTriffTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FeeSNColumn {
                get {
                    return this.columnFeeSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SortColumn {
                get {
                    return this.columnSort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CountrySymbolColumn {
                get {
                    return this.columnCountrySymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KindSNColumn {
                get {
                    return this.columnKindSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProcedureNameColumn {
                get {
                    return this.columnProcedureName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProcedureName_CHSColumn {
                get {
                    return this.columnProcedureName_CHS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProcedureName_ENColumn {
                get {
                    return this.columnProcedureName_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhaseKEYColumn {
                get {
                    return this.columnPhaseKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExamtimeColumn {
                get {
                    return this.columnExamtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GovFeeColumn {
                get {
                    return this.columnGovFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GovFeeNTColumn {
                get {
                    return this.columnGovFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MoneyKindGColumn {
                get {
                    return this.columnMoneyKindG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyKeyColumn {
                get {
                    return this.columnAttorneyKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyFeeColumn {
                get {
                    return this.columnAttorneyFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyELFeeNTColumn {
                get {
                    return this.columnAttorneyELFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyElseFeeColumn {
                get {
                    return this.columnAttorneyElseFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyElseFeeNTColumn {
                get {
                    return this.columnAttorneyElseFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NotifyFeeColumn {
                get {
                    return this.columnNotifyFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NotifyFeeNTColumn {
                get {
                    return this.columnNotifyFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MoneyKindColumn {
                get {
                    return this.columnMoneyKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TranFeeColumn {
                get {
                    return this.columnTranFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WriteFeeColumn {
                get {
                    return this.columnWriteFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SafeFeeColumn {
                get {
                    return this.columnSafeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyFeeNTColumn {
                get {
                    return this.columnAttorneyFeeNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyGovFeeColumn {
                get {
                    return this.columnAttorneyGovFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeFeeColumn {
                get {
                    return this.columnMeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotallColumn {
                get {
                    return this.columnTotall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QuotaTotalColumn {
                get {
                    return this.columnQuotaTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SignDocumentColumn {
                get {
                    return this.columnSignDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ToNTColumn {
                get {
                    return this.columnToNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ToNTGColumn {
                get {
                    return this.columnToNTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Remark_CHSColumn {
                get {
                    return this.columnRemark_CHS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Remark_ENColumn {
                get {
                    return this.columnRemark_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeRemarkColumn {
                get {
                    return this.columnMeRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeRemark_CHSColumn {
                get {
                    return this.columnMeRemark_CHS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MeRemark_ENColumn {
                get {
                    return this.columnMeRemark_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GainColumn {
                get {
                    return this.columnGain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LargeEntityColumn {
                get {
                    return this.columnLargeEntity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ForStanderColumn {
                get {
                    return this.columnForStander;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NofityContentColumn {
                get {
                    return this.columnNofityContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BeforeTotalColumn {
                get {
                    return this.columnBeforeTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AfterProcessColumn {
                get {
                    return this.columnAfterProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastModifyDateTimeColumn {
                get {
                    return this.columnLastModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AttorneyFirmColumn {
                get {
                    return this.columnAttorneyFirm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhaseNameColumn {
                get {
                    return this.columnPhaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public nTriffTRow this[int index] {
                get {
                    return ((nTriffTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event nTriffTRowChangeEventHandler nTriffTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event nTriffTRowChangeEventHandler nTriffTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event nTriffTRowChangeEventHandler nTriffTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event nTriffTRowChangeEventHandler nTriffTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddnTriffTRow(nTriffTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public nTriffTRow AddnTriffTRow(
                        int Sort, 
                        string CountrySymbol, 
                        string KindSN, 
                        string ProcedureName, 
                        string ProcedureName_CHS, 
                        string ProcedureName_EN, 
                        int PhaseKEY, 
                        string Examtime, 
                        decimal GovFee, 
                        decimal GovFeeNT, 
                        string MoneyKindG, 
                        int AttorneyKey, 
                        decimal AttorneyFee, 
                        decimal AttorneyELFeeNT, 
                        decimal AttorneyElseFee, 
                        decimal AttorneyElseFeeNT, 
                        decimal NotifyFee, 
                        decimal NotifyFeeNT, 
                        string MoneyKind, 
                        decimal TranFee, 
                        decimal WriteFee, 
                        decimal SafeFee, 
                        decimal AttorneyFeeNT, 
                        decimal AttorneyGovFee, 
                        decimal MeFee, 
                        decimal Totall, 
                        decimal QuotaTotal, 
                        string SignDocument, 
                        decimal ToNT, 
                        decimal ToNTG, 
                        string Remark, 
                        string Remark_CHS, 
                        string Remark_EN, 
                        string MeRemark, 
                        string MeRemark_CHS, 
                        string MeRemark_EN, 
                        decimal Gain, 
                        bool LargeEntity, 
                        bool ForStander, 
                        string NofityContent, 
                        decimal BeforeTotal, 
                        string AfterProcess, 
                        System.DateTime CreateDateTime, 
                        System.DateTime LastModifyDateTime, 
                        string AttorneyFirm, 
                        string PhaseName) {
                nTriffTRow rownTriffTRow = ((nTriffTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Sort,
                        CountrySymbol,
                        KindSN,
                        ProcedureName,
                        ProcedureName_CHS,
                        ProcedureName_EN,
                        PhaseKEY,
                        Examtime,
                        GovFee,
                        GovFeeNT,
                        MoneyKindG,
                        AttorneyKey,
                        AttorneyFee,
                        AttorneyELFeeNT,
                        AttorneyElseFee,
                        AttorneyElseFeeNT,
                        NotifyFee,
                        NotifyFeeNT,
                        MoneyKind,
                        TranFee,
                        WriteFee,
                        SafeFee,
                        AttorneyFeeNT,
                        AttorneyGovFee,
                        MeFee,
                        Totall,
                        QuotaTotal,
                        SignDocument,
                        ToNT,
                        ToNTG,
                        Remark,
                        Remark_CHS,
                        Remark_EN,
                        MeRemark,
                        MeRemark_CHS,
                        MeRemark_EN,
                        Gain,
                        LargeEntity,
                        ForStander,
                        NofityContent,
                        BeforeTotal,
                        AfterProcess,
                        CreateDateTime,
                        LastModifyDateTime,
                        AttorneyFirm,
                        PhaseName};
                rownTriffTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownTriffTRow);
                return rownTriffTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public nTriffTRow FindByFeeSN(int FeeSN) {
                return ((nTriffTRow)(this.Rows.Find(new object[] {
                            FeeSN})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                nTriffTDataTable cln = ((nTriffTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new nTriffTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFeeSN = base.Columns["FeeSN"];
                this.columnSort = base.Columns["Sort"];
                this.columnCountrySymbol = base.Columns["CountrySymbol"];
                this.columnKindSN = base.Columns["KindSN"];
                this.columnProcedureName = base.Columns["ProcedureName"];
                this.columnProcedureName_CHS = base.Columns["ProcedureName_CHS"];
                this.columnProcedureName_EN = base.Columns["ProcedureName_EN"];
                this.columnPhaseKEY = base.Columns["PhaseKEY"];
                this.columnExamtime = base.Columns["Examtime"];
                this.columnGovFee = base.Columns["GovFee"];
                this.columnGovFeeNT = base.Columns["GovFeeNT"];
                this.columnMoneyKindG = base.Columns["MoneyKindG"];
                this.columnAttorneyKey = base.Columns["AttorneyKey"];
                this.columnAttorneyFee = base.Columns["AttorneyFee"];
                this.columnAttorneyELFeeNT = base.Columns["AttorneyELFeeNT"];
                this.columnAttorneyElseFee = base.Columns["AttorneyElseFee"];
                this.columnAttorneyElseFeeNT = base.Columns["AttorneyElseFeeNT"];
                this.columnNotifyFee = base.Columns["NotifyFee"];
                this.columnNotifyFeeNT = base.Columns["NotifyFeeNT"];
                this.columnMoneyKind = base.Columns["MoneyKind"];
                this.columnTranFee = base.Columns["TranFee"];
                this.columnWriteFee = base.Columns["WriteFee"];
                this.columnSafeFee = base.Columns["SafeFee"];
                this.columnAttorneyFeeNT = base.Columns["AttorneyFeeNT"];
                this.columnAttorneyGovFee = base.Columns["AttorneyGovFee"];
                this.columnMeFee = base.Columns["MeFee"];
                this.columnTotall = base.Columns["Totall"];
                this.columnQuotaTotal = base.Columns["QuotaTotal"];
                this.columnSignDocument = base.Columns["SignDocument"];
                this.columnToNT = base.Columns["ToNT"];
                this.columnToNTG = base.Columns["ToNTG"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRemark_CHS = base.Columns["Remark_CHS"];
                this.columnRemark_EN = base.Columns["Remark_EN"];
                this.columnMeRemark = base.Columns["MeRemark"];
                this.columnMeRemark_CHS = base.Columns["MeRemark_CHS"];
                this.columnMeRemark_EN = base.Columns["MeRemark_EN"];
                this.columnGain = base.Columns["Gain"];
                this.columnLargeEntity = base.Columns["LargeEntity"];
                this.columnForStander = base.Columns["ForStander"];
                this.columnNofityContent = base.Columns["NofityContent"];
                this.columnBeforeTotal = base.Columns["BeforeTotal"];
                this.columnAfterProcess = base.Columns["AfterProcess"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnLastModifyDateTime = base.Columns["LastModifyDateTime"];
                this.columnAttorneyFirm = base.Columns["AttorneyFirm"];
                this.columnPhaseName = base.Columns["PhaseName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFeeSN = new global::System.Data.DataColumn("FeeSN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeeSN);
                this.columnSort = new global::System.Data.DataColumn("Sort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSort);
                this.columnCountrySymbol = new global::System.Data.DataColumn("CountrySymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountrySymbol);
                this.columnKindSN = new global::System.Data.DataColumn("KindSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKindSN);
                this.columnProcedureName = new global::System.Data.DataColumn("ProcedureName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureName);
                this.columnProcedureName_CHS = new global::System.Data.DataColumn("ProcedureName_CHS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureName_CHS);
                this.columnProcedureName_EN = new global::System.Data.DataColumn("ProcedureName_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureName_EN);
                this.columnPhaseKEY = new global::System.Data.DataColumn("PhaseKEY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseKEY);
                this.columnExamtime = new global::System.Data.DataColumn("Examtime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamtime);
                this.columnGovFee = new global::System.Data.DataColumn("GovFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGovFee);
                this.columnGovFeeNT = new global::System.Data.DataColumn("GovFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGovFeeNT);
                this.columnMoneyKindG = new global::System.Data.DataColumn("MoneyKindG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyKindG);
                this.columnAttorneyKey = new global::System.Data.DataColumn("AttorneyKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyKey);
                this.columnAttorneyFee = new global::System.Data.DataColumn("AttorneyFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyFee);
                this.columnAttorneyELFeeNT = new global::System.Data.DataColumn("AttorneyELFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyELFeeNT);
                this.columnAttorneyElseFee = new global::System.Data.DataColumn("AttorneyElseFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyElseFee);
                this.columnAttorneyElseFeeNT = new global::System.Data.DataColumn("AttorneyElseFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyElseFeeNT);
                this.columnNotifyFee = new global::System.Data.DataColumn("NotifyFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyFee);
                this.columnNotifyFeeNT = new global::System.Data.DataColumn("NotifyFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyFeeNT);
                this.columnMoneyKind = new global::System.Data.DataColumn("MoneyKind", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyKind);
                this.columnTranFee = new global::System.Data.DataColumn("TranFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranFee);
                this.columnWriteFee = new global::System.Data.DataColumn("WriteFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWriteFee);
                this.columnSafeFee = new global::System.Data.DataColumn("SafeFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafeFee);
                this.columnAttorneyFeeNT = new global::System.Data.DataColumn("AttorneyFeeNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyFeeNT);
                this.columnAttorneyGovFee = new global::System.Data.DataColumn("AttorneyGovFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyGovFee);
                this.columnMeFee = new global::System.Data.DataColumn("MeFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeFee);
                this.columnTotall = new global::System.Data.DataColumn("Totall", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotall);
                this.columnQuotaTotal = new global::System.Data.DataColumn("QuotaTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotaTotal);
                this.columnSignDocument = new global::System.Data.DataColumn("SignDocument", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignDocument);
                this.columnToNT = new global::System.Data.DataColumn("ToNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToNT);
                this.columnToNTG = new global::System.Data.DataColumn("ToNTG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToNTG);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRemark_CHS = new global::System.Data.DataColumn("Remark_CHS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark_CHS);
                this.columnRemark_EN = new global::System.Data.DataColumn("Remark_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark_EN);
                this.columnMeRemark = new global::System.Data.DataColumn("MeRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeRemark);
                this.columnMeRemark_CHS = new global::System.Data.DataColumn("MeRemark_CHS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeRemark_CHS);
                this.columnMeRemark_EN = new global::System.Data.DataColumn("MeRemark_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeRemark_EN);
                this.columnGain = new global::System.Data.DataColumn("Gain", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGain);
                this.columnLargeEntity = new global::System.Data.DataColumn("LargeEntity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLargeEntity);
                this.columnForStander = new global::System.Data.DataColumn("ForStander", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForStander);
                this.columnNofityContent = new global::System.Data.DataColumn("NofityContent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNofityContent);
                this.columnBeforeTotal = new global::System.Data.DataColumn("BeforeTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeforeTotal);
                this.columnAfterProcess = new global::System.Data.DataColumn("AfterProcess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfterProcess);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnLastModifyDateTime = new global::System.Data.DataColumn("LastModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastModifyDateTime);
                this.columnAttorneyFirm = new global::System.Data.DataColumn("AttorneyFirm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttorneyFirm);
                this.columnPhaseName = new global::System.Data.DataColumn("PhaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeeSN}, true));
                this.columnFeeSN.AutoIncrement = true;
                this.columnFeeSN.AutoIncrementSeed = -1;
                this.columnFeeSN.AutoIncrementStep = -1;
                this.columnFeeSN.AllowDBNull = false;
                this.columnFeeSN.ReadOnly = true;
                this.columnFeeSN.Unique = true;
                this.columnCountrySymbol.MaxLength = 100;
                this.columnKindSN.MaxLength = 20;
                this.columnProcedureName.MaxLength = 100;
                this.columnProcedureName_CHS.MaxLength = 1000;
                this.columnProcedureName_EN.MaxLength = 2000;
                this.columnExamtime.MaxLength = 500;
                this.columnMoneyKindG.MaxLength = 10;
                this.columnMoneyKind.MaxLength = 10;
                this.columnSignDocument.MaxLength = 120;
                this.columnRemark.MaxLength = 4000;
                this.columnRemark_CHS.MaxLength = 4000;
                this.columnRemark_EN.MaxLength = 4000;
                this.columnMeRemark.MaxLength = 4000;
                this.columnMeRemark_CHS.MaxLength = 4000;
                this.columnMeRemark_EN.MaxLength = 4000;
                this.columnNofityContent.MaxLength = 200;
                this.columnAfterProcess.MaxLength = 4000;
                this.columnAttorneyFirm.MaxLength = 300;
                this.columnPhaseName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public nTriffTRow NewnTriffTRow() {
                return ((nTriffTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new nTriffTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(nTriffTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.nTriffTRowChanged != null)) {
                    this.nTriffTRowChanged(this, new nTriffTRowChangeEvent(((nTriffTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.nTriffTRowChanging != null)) {
                    this.nTriffTRowChanging(this, new nTriffTRowChangeEvent(((nTriffTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.nTriffTRowDeleted != null)) {
                    this.nTriffTRowDeleted(this, new nTriffTRowChangeEvent(((nTriffTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.nTriffTRowDeleting != null)) {
                    this.nTriffTRowDeleting(this, new nTriffTRowChangeEvent(((nTriffTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovenTriffTRow(nTriffTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Triff ds = new DataSet_Triff();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "nTriffTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class V_nTriffListRow : global::System.Data.DataRow {
            
            private V_nTriffListDataTable tableV_nTriffList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal V_nTriffListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_nTriffList = ((V_nTriffListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FeeSN {
                get {
                    return ((int)(this[this.tableV_nTriffList.FeeSNColumn]));
                }
                set {
                    this[this.tableV_nTriffList.FeeSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Sort {
                get {
                    try {
                        return ((int)(this[this.tableV_nTriffList.SortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Sort\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.SortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CountrySymbol {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.CountrySymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'CountrySymbol\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.CountrySymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Country\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KindSN {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.KindSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'KindSN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.KindSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Kind {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.KindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Kind\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.KindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProcedureName {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.ProcedureNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'ProcedureName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.ProcedureNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProcedureName_CHS {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.ProcedureName_CHSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'ProcedureName_CHS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.ProcedureName_CHSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProcedureName_EN {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.ProcedureName_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'ProcedureName_EN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.ProcedureName_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PhaseKEY {
                get {
                    try {
                        return ((int)(this[this.tableV_nTriffList.PhaseKEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'PhaseKEY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.PhaseKEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PhaseName {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.PhaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'PhaseName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.PhaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Examtime {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.ExamtimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Examtime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.ExamtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GovFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.GovFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'GovFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.GovFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GovFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.GovFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'GovFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.GovFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MoneyKindG {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.MoneyKindGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'MoneyKindG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.MoneyKindGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AttorneyKey {
                get {
                    try {
                        return ((int)(this[this.tableV_nTriffList.AttorneyKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.AttorneyFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AttorneySymbol {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.AttorneySymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneySymbol\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneySymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AttorneyFirm {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.AttorneyFirmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyFirm\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyFirmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyELFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.AttorneyELFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyELFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyELFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyElseFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.AttorneyElseFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyElseFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyElseFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyElseFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.AttorneyElseFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyElseFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyElseFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NotifyFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.NotifyFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'NotifyFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.NotifyFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NotifyFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.NotifyFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'NotifyFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.NotifyFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MoneyKind {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.MoneyKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'MoneyKind\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.MoneyKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TranFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.TranFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'TranFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.TranFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WriteFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.WriteFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'WriteFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.WriteFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SafeFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.SafeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'SafeFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.SafeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.AttorneyFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyGovFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.AttorneyGovFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AttorneyGovFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AttorneyGovFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MeFee {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.MeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'MeFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.MeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Totall {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.TotallColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Totall\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.TotallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal QuotaTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.QuotaTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'QuotaTotal\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.QuotaTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SignDocument {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.SignDocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'SignDocument\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.SignDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ToNT {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.ToNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'ToNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.ToNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ToNTG {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.ToNTGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'ToNTG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.ToNTGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Remark\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remark_CHS {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.Remark_CHSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Remark_CHS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.Remark_CHSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remark_EN {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.Remark_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Remark_EN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.Remark_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MeRemark {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.MeRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'MeRemark\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.MeRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MeRemark_CHS {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.MeRemark_CHSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'MeRemark_CHS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.MeRemark_CHSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MeRemark_EN {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.MeRemark_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'MeRemark_EN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.MeRemark_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Gain {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.GainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'Gain\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.GainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LargeEntity {
                get {
                    try {
                        return ((bool)(this[this.tableV_nTriffList.LargeEntityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'LargeEntity\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.LargeEntityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ForStander {
                get {
                    try {
                        return ((bool)(this[this.tableV_nTriffList.ForStanderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'ForStander\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.ForStanderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NofityContent {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.NofityContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'NofityContent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.NofityContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BeforeTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableV_nTriffList.BeforeTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'BeforeTotal\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.BeforeTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AfterProcess {
                get {
                    try {
                        return ((string)(this[this.tableV_nTriffList.AfterProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'V_nTriffList\' 中資料行 \'AfterProcess\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableV_nTriffList.AfterProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSortNull() {
                return this.IsNull(this.tableV_nTriffList.SortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSortNull() {
                this[this.tableV_nTriffList.SortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCountrySymbolNull() {
                return this.IsNull(this.tableV_nTriffList.CountrySymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCountrySymbolNull() {
                this[this.tableV_nTriffList.CountrySymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tableV_nTriffList.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCountryNull() {
                this[this.tableV_nTriffList.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKindSNNull() {
                return this.IsNull(this.tableV_nTriffList.KindSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKindSNNull() {
                this[this.tableV_nTriffList.KindSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKindNull() {
                return this.IsNull(this.tableV_nTriffList.KindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKindNull() {
                this[this.tableV_nTriffList.KindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProcedureNameNull() {
                return this.IsNull(this.tableV_nTriffList.ProcedureNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProcedureNameNull() {
                this[this.tableV_nTriffList.ProcedureNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProcedureName_CHSNull() {
                return this.IsNull(this.tableV_nTriffList.ProcedureName_CHSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProcedureName_CHSNull() {
                this[this.tableV_nTriffList.ProcedureName_CHSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProcedureName_ENNull() {
                return this.IsNull(this.tableV_nTriffList.ProcedureName_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProcedureName_ENNull() {
                this[this.tableV_nTriffList.ProcedureName_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhaseKEYNull() {
                return this.IsNull(this.tableV_nTriffList.PhaseKEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhaseKEYNull() {
                this[this.tableV_nTriffList.PhaseKEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhaseNameNull() {
                return this.IsNull(this.tableV_nTriffList.PhaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhaseNameNull() {
                this[this.tableV_nTriffList.PhaseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExamtimeNull() {
                return this.IsNull(this.tableV_nTriffList.ExamtimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExamtimeNull() {
                this[this.tableV_nTriffList.ExamtimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGovFeeNull() {
                return this.IsNull(this.tableV_nTriffList.GovFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGovFeeNull() {
                this[this.tableV_nTriffList.GovFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGovFeeNTNull() {
                return this.IsNull(this.tableV_nTriffList.GovFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGovFeeNTNull() {
                this[this.tableV_nTriffList.GovFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMoneyKindGNull() {
                return this.IsNull(this.tableV_nTriffList.MoneyKindGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMoneyKindGNull() {
                this[this.tableV_nTriffList.MoneyKindGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyKeyNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyKeyNull() {
                this[this.tableV_nTriffList.AttorneyKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyFeeNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyFeeNull() {
                this[this.tableV_nTriffList.AttorneyFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneySymbolNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneySymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneySymbolNull() {
                this[this.tableV_nTriffList.AttorneySymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyFirmNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyFirmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyFirmNull() {
                this[this.tableV_nTriffList.AttorneyFirmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyELFeeNTNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyELFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyELFeeNTNull() {
                this[this.tableV_nTriffList.AttorneyELFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyElseFeeNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyElseFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyElseFeeNull() {
                this[this.tableV_nTriffList.AttorneyElseFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyElseFeeNTNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyElseFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyElseFeeNTNull() {
                this[this.tableV_nTriffList.AttorneyElseFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNotifyFeeNull() {
                return this.IsNull(this.tableV_nTriffList.NotifyFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNotifyFeeNull() {
                this[this.tableV_nTriffList.NotifyFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNotifyFeeNTNull() {
                return this.IsNull(this.tableV_nTriffList.NotifyFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNotifyFeeNTNull() {
                this[this.tableV_nTriffList.NotifyFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMoneyKindNull() {
                return this.IsNull(this.tableV_nTriffList.MoneyKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMoneyKindNull() {
                this[this.tableV_nTriffList.MoneyKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTranFeeNull() {
                return this.IsNull(this.tableV_nTriffList.TranFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTranFeeNull() {
                this[this.tableV_nTriffList.TranFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWriteFeeNull() {
                return this.IsNull(this.tableV_nTriffList.WriteFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWriteFeeNull() {
                this[this.tableV_nTriffList.WriteFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSafeFeeNull() {
                return this.IsNull(this.tableV_nTriffList.SafeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSafeFeeNull() {
                this[this.tableV_nTriffList.SafeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyFeeNTNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyFeeNTNull() {
                this[this.tableV_nTriffList.AttorneyFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyGovFeeNull() {
                return this.IsNull(this.tableV_nTriffList.AttorneyGovFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyGovFeeNull() {
                this[this.tableV_nTriffList.AttorneyGovFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeFeeNull() {
                return this.IsNull(this.tableV_nTriffList.MeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeFeeNull() {
                this[this.tableV_nTriffList.MeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotallNull() {
                return this.IsNull(this.tableV_nTriffList.TotallColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotallNull() {
                this[this.tableV_nTriffList.TotallColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQuotaTotalNull() {
                return this.IsNull(this.tableV_nTriffList.QuotaTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQuotaTotalNull() {
                this[this.tableV_nTriffList.QuotaTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSignDocumentNull() {
                return this.IsNull(this.tableV_nTriffList.SignDocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSignDocumentNull() {
                this[this.tableV_nTriffList.SignDocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsToNTNull() {
                return this.IsNull(this.tableV_nTriffList.ToNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetToNTNull() {
                this[this.tableV_nTriffList.ToNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsToNTGNull() {
                return this.IsNull(this.tableV_nTriffList.ToNTGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetToNTGNull() {
                this[this.tableV_nTriffList.ToNTGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableV_nTriffList.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableV_nTriffList.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemark_CHSNull() {
                return this.IsNull(this.tableV_nTriffList.Remark_CHSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemark_CHSNull() {
                this[this.tableV_nTriffList.Remark_CHSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemark_ENNull() {
                return this.IsNull(this.tableV_nTriffList.Remark_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemark_ENNull() {
                this[this.tableV_nTriffList.Remark_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeRemarkNull() {
                return this.IsNull(this.tableV_nTriffList.MeRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeRemarkNull() {
                this[this.tableV_nTriffList.MeRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeRemark_CHSNull() {
                return this.IsNull(this.tableV_nTriffList.MeRemark_CHSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeRemark_CHSNull() {
                this[this.tableV_nTriffList.MeRemark_CHSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeRemark_ENNull() {
                return this.IsNull(this.tableV_nTriffList.MeRemark_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeRemark_ENNull() {
                this[this.tableV_nTriffList.MeRemark_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGainNull() {
                return this.IsNull(this.tableV_nTriffList.GainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGainNull() {
                this[this.tableV_nTriffList.GainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLargeEntityNull() {
                return this.IsNull(this.tableV_nTriffList.LargeEntityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLargeEntityNull() {
                this[this.tableV_nTriffList.LargeEntityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsForStanderNull() {
                return this.IsNull(this.tableV_nTriffList.ForStanderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetForStanderNull() {
                this[this.tableV_nTriffList.ForStanderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNofityContentNull() {
                return this.IsNull(this.tableV_nTriffList.NofityContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNofityContentNull() {
                this[this.tableV_nTriffList.NofityContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBeforeTotalNull() {
                return this.IsNull(this.tableV_nTriffList.BeforeTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBeforeTotalNull() {
                this[this.tableV_nTriffList.BeforeTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAfterProcessNull() {
                return this.IsNull(this.tableV_nTriffList.AfterProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAfterProcessNull() {
                this[this.tableV_nTriffList.AfterProcessColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PhaseTRow : global::System.Data.DataRow {
            
            private PhaseTDataTable tablePhaseT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PhaseTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePhaseT = ((PhaseTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PhaseKey {
                get {
                    return ((int)(this[this.tablePhaseT.PhaseKeyColumn]));
                }
                set {
                    this[this.tablePhaseT.PhaseKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Sort {
                get {
                    try {
                        return ((int)(this[this.tablePhaseT.SortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PhaseT\' 中資料行 \'Sort\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePhaseT.SortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PhaseName {
                get {
                    try {
                        return ((string)(this[this.tablePhaseT.PhaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PhaseT\' 中資料行 \'PhaseName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePhaseT.PhaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSortNull() {
                return this.IsNull(this.tablePhaseT.SortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSortNull() {
                this[this.tablePhaseT.SortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhaseNameNull() {
                return this.IsNull(this.tablePhaseT.PhaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhaseNameNull() {
                this[this.tablePhaseT.PhaseNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class nTriffTRow : global::System.Data.DataRow {
            
            private nTriffTDataTable tablenTriffT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal nTriffTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenTriffT = ((nTriffTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FeeSN {
                get {
                    return ((int)(this[this.tablenTriffT.FeeSNColumn]));
                }
                set {
                    this[this.tablenTriffT.FeeSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Sort {
                get {
                    try {
                        return ((int)(this[this.tablenTriffT.SortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'Sort\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.SortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CountrySymbol {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.CountrySymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'CountrySymbol\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.CountrySymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KindSN {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.KindSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'KindSN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.KindSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProcedureName {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.ProcedureNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'ProcedureName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.ProcedureNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProcedureName_CHS {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.ProcedureName_CHSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'ProcedureName_CHS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.ProcedureName_CHSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProcedureName_EN {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.ProcedureName_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'ProcedureName_EN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.ProcedureName_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PhaseKEY {
                get {
                    try {
                        return ((int)(this[this.tablenTriffT.PhaseKEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'PhaseKEY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.PhaseKEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Examtime {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.ExamtimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'Examtime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.ExamtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GovFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.GovFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'GovFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.GovFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GovFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.GovFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'GovFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.GovFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MoneyKindG {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.MoneyKindGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'MoneyKindG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.MoneyKindGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AttorneyKey {
                get {
                    try {
                        return ((int)(this[this.tablenTriffT.AttorneyKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyKey\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.AttorneyFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyELFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.AttorneyELFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyELFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyELFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyElseFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.AttorneyElseFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyElseFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyElseFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyElseFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.AttorneyElseFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyElseFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyElseFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NotifyFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.NotifyFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'NotifyFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.NotifyFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NotifyFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.NotifyFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'NotifyFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.NotifyFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MoneyKind {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.MoneyKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'MoneyKind\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.MoneyKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TranFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.TranFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'TranFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.TranFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WriteFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.WriteFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'WriteFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.WriteFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SafeFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.SafeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'SafeFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.SafeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyFeeNT {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.AttorneyFeeNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyFeeNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyFeeNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AttorneyGovFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.AttorneyGovFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyGovFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyGovFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MeFee {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.MeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'MeFee\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.MeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Totall {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.TotallColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'Totall\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.TotallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal QuotaTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.QuotaTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'QuotaTotal\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.QuotaTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SignDocument {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.SignDocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'SignDocument\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.SignDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ToNT {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.ToNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'ToNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.ToNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ToNTG {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.ToNTGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'ToNTG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.ToNTGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'Remark\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remark_CHS {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.Remark_CHSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'Remark_CHS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.Remark_CHSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Remark_EN {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.Remark_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'Remark_EN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.Remark_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MeRemark {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.MeRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'MeRemark\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.MeRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MeRemark_CHS {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.MeRemark_CHSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'MeRemark_CHS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.MeRemark_CHSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MeRemark_EN {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.MeRemark_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'MeRemark_EN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.MeRemark_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Gain {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.GainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'Gain\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.GainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LargeEntity {
                get {
                    try {
                        return ((bool)(this[this.tablenTriffT.LargeEntityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'LargeEntity\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.LargeEntityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ForStander {
                get {
                    try {
                        return ((bool)(this[this.tablenTriffT.ForStanderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'ForStander\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.ForStanderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NofityContent {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.NofityContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'NofityContent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.NofityContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BeforeTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablenTriffT.BeforeTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'BeforeTotal\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.BeforeTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AfterProcess {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.AfterProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AfterProcess\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AfterProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablenTriffT.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'CreateDateTime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LastModifyDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablenTriffT.LastModifyDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'LastModifyDateTime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.LastModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AttorneyFirm {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.AttorneyFirmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'AttorneyFirm\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.AttorneyFirmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PhaseName {
                get {
                    try {
                        return ((string)(this[this.tablenTriffT.PhaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'nTriffT\' 中資料行 \'PhaseName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablenTriffT.PhaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSortNull() {
                return this.IsNull(this.tablenTriffT.SortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSortNull() {
                this[this.tablenTriffT.SortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCountrySymbolNull() {
                return this.IsNull(this.tablenTriffT.CountrySymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCountrySymbolNull() {
                this[this.tablenTriffT.CountrySymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKindSNNull() {
                return this.IsNull(this.tablenTriffT.KindSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKindSNNull() {
                this[this.tablenTriffT.KindSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProcedureNameNull() {
                return this.IsNull(this.tablenTriffT.ProcedureNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProcedureNameNull() {
                this[this.tablenTriffT.ProcedureNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProcedureName_CHSNull() {
                return this.IsNull(this.tablenTriffT.ProcedureName_CHSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProcedureName_CHSNull() {
                this[this.tablenTriffT.ProcedureName_CHSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProcedureName_ENNull() {
                return this.IsNull(this.tablenTriffT.ProcedureName_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProcedureName_ENNull() {
                this[this.tablenTriffT.ProcedureName_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhaseKEYNull() {
                return this.IsNull(this.tablenTriffT.PhaseKEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhaseKEYNull() {
                this[this.tablenTriffT.PhaseKEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExamtimeNull() {
                return this.IsNull(this.tablenTriffT.ExamtimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExamtimeNull() {
                this[this.tablenTriffT.ExamtimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGovFeeNull() {
                return this.IsNull(this.tablenTriffT.GovFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGovFeeNull() {
                this[this.tablenTriffT.GovFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGovFeeNTNull() {
                return this.IsNull(this.tablenTriffT.GovFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGovFeeNTNull() {
                this[this.tablenTriffT.GovFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMoneyKindGNull() {
                return this.IsNull(this.tablenTriffT.MoneyKindGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMoneyKindGNull() {
                this[this.tablenTriffT.MoneyKindGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyKeyNull() {
                return this.IsNull(this.tablenTriffT.AttorneyKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyKeyNull() {
                this[this.tablenTriffT.AttorneyKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyFeeNull() {
                return this.IsNull(this.tablenTriffT.AttorneyFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyFeeNull() {
                this[this.tablenTriffT.AttorneyFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyELFeeNTNull() {
                return this.IsNull(this.tablenTriffT.AttorneyELFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyELFeeNTNull() {
                this[this.tablenTriffT.AttorneyELFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyElseFeeNull() {
                return this.IsNull(this.tablenTriffT.AttorneyElseFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyElseFeeNull() {
                this[this.tablenTriffT.AttorneyElseFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyElseFeeNTNull() {
                return this.IsNull(this.tablenTriffT.AttorneyElseFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyElseFeeNTNull() {
                this[this.tablenTriffT.AttorneyElseFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNotifyFeeNull() {
                return this.IsNull(this.tablenTriffT.NotifyFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNotifyFeeNull() {
                this[this.tablenTriffT.NotifyFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNotifyFeeNTNull() {
                return this.IsNull(this.tablenTriffT.NotifyFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNotifyFeeNTNull() {
                this[this.tablenTriffT.NotifyFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMoneyKindNull() {
                return this.IsNull(this.tablenTriffT.MoneyKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMoneyKindNull() {
                this[this.tablenTriffT.MoneyKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTranFeeNull() {
                return this.IsNull(this.tablenTriffT.TranFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTranFeeNull() {
                this[this.tablenTriffT.TranFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWriteFeeNull() {
                return this.IsNull(this.tablenTriffT.WriteFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWriteFeeNull() {
                this[this.tablenTriffT.WriteFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSafeFeeNull() {
                return this.IsNull(this.tablenTriffT.SafeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSafeFeeNull() {
                this[this.tablenTriffT.SafeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyFeeNTNull() {
                return this.IsNull(this.tablenTriffT.AttorneyFeeNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyFeeNTNull() {
                this[this.tablenTriffT.AttorneyFeeNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyGovFeeNull() {
                return this.IsNull(this.tablenTriffT.AttorneyGovFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyGovFeeNull() {
                this[this.tablenTriffT.AttorneyGovFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeFeeNull() {
                return this.IsNull(this.tablenTriffT.MeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeFeeNull() {
                this[this.tablenTriffT.MeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotallNull() {
                return this.IsNull(this.tablenTriffT.TotallColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotallNull() {
                this[this.tablenTriffT.TotallColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQuotaTotalNull() {
                return this.IsNull(this.tablenTriffT.QuotaTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQuotaTotalNull() {
                this[this.tablenTriffT.QuotaTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSignDocumentNull() {
                return this.IsNull(this.tablenTriffT.SignDocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSignDocumentNull() {
                this[this.tablenTriffT.SignDocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsToNTNull() {
                return this.IsNull(this.tablenTriffT.ToNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetToNTNull() {
                this[this.tablenTriffT.ToNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsToNTGNull() {
                return this.IsNull(this.tablenTriffT.ToNTGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetToNTGNull() {
                this[this.tablenTriffT.ToNTGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tablenTriffT.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemarkNull() {
                this[this.tablenTriffT.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemark_CHSNull() {
                return this.IsNull(this.tablenTriffT.Remark_CHSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemark_CHSNull() {
                this[this.tablenTriffT.Remark_CHSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemark_ENNull() {
                return this.IsNull(this.tablenTriffT.Remark_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemark_ENNull() {
                this[this.tablenTriffT.Remark_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeRemarkNull() {
                return this.IsNull(this.tablenTriffT.MeRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeRemarkNull() {
                this[this.tablenTriffT.MeRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeRemark_CHSNull() {
                return this.IsNull(this.tablenTriffT.MeRemark_CHSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeRemark_CHSNull() {
                this[this.tablenTriffT.MeRemark_CHSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMeRemark_ENNull() {
                return this.IsNull(this.tablenTriffT.MeRemark_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMeRemark_ENNull() {
                this[this.tablenTriffT.MeRemark_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGainNull() {
                return this.IsNull(this.tablenTriffT.GainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGainNull() {
                this[this.tablenTriffT.GainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLargeEntityNull() {
                return this.IsNull(this.tablenTriffT.LargeEntityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLargeEntityNull() {
                this[this.tablenTriffT.LargeEntityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsForStanderNull() {
                return this.IsNull(this.tablenTriffT.ForStanderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetForStanderNull() {
                this[this.tablenTriffT.ForStanderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNofityContentNull() {
                return this.IsNull(this.tablenTriffT.NofityContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNofityContentNull() {
                this[this.tablenTriffT.NofityContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBeforeTotalNull() {
                return this.IsNull(this.tablenTriffT.BeforeTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBeforeTotalNull() {
                this[this.tablenTriffT.BeforeTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAfterProcessNull() {
                return this.IsNull(this.tablenTriffT.AfterProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAfterProcessNull() {
                this[this.tablenTriffT.AfterProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tablenTriffT.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tablenTriffT.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastModifyDateTimeNull() {
                return this.IsNull(this.tablenTriffT.LastModifyDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastModifyDateTimeNull() {
                this[this.tablenTriffT.LastModifyDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAttorneyFirmNull() {
                return this.IsNull(this.tablenTriffT.AttorneyFirmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAttorneyFirmNull() {
                this[this.tablenTriffT.AttorneyFirmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhaseNameNull() {
                return this.IsNull(this.tablenTriffT.PhaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhaseNameNull() {
                this[this.tablenTriffT.PhaseNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class V_nTriffListRowChangeEvent : global::System.EventArgs {
            
            private V_nTriffListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public V_nTriffListRowChangeEvent(V_nTriffListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public V_nTriffListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PhaseTRowChangeEvent : global::System.EventArgs {
            
            private PhaseTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PhaseTRowChangeEvent(PhaseTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PhaseTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class nTriffTRowChangeEvent : global::System.EventArgs {
            
            private nTriffTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public nTriffTRowChangeEvent(nTriffTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public nTriffTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LawtechPTSystem.DataSet_TriffTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_nTriffListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public V_nTriffListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_nTriffList";
            tableMapping.ColumnMappings.Add("FeeSN", "FeeSN");
            tableMapping.ColumnMappings.Add("Sort", "Sort");
            tableMapping.ColumnMappings.Add("CountrySymbol", "CountrySymbol");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("KindSN", "KindSN");
            tableMapping.ColumnMappings.Add("Kind", "Kind");
            tableMapping.ColumnMappings.Add("ProcedureName", "ProcedureName");
            tableMapping.ColumnMappings.Add("ProcedureName_CHS", "ProcedureName_CHS");
            tableMapping.ColumnMappings.Add("ProcedureName_EN", "ProcedureName_EN");
            tableMapping.ColumnMappings.Add("PhaseKEY", "PhaseKEY");
            tableMapping.ColumnMappings.Add("PhaseName", "PhaseName");
            tableMapping.ColumnMappings.Add("Examtime", "Examtime");
            tableMapping.ColumnMappings.Add("GovFee", "GovFee");
            tableMapping.ColumnMappings.Add("GovFeeNT", "GovFeeNT");
            tableMapping.ColumnMappings.Add("MoneyKindG", "MoneyKindG");
            tableMapping.ColumnMappings.Add("AttorneyKey", "AttorneyKey");
            tableMapping.ColumnMappings.Add("AttorneyFee", "AttorneyFee");
            tableMapping.ColumnMappings.Add("AttorneySymbol", "AttorneySymbol");
            tableMapping.ColumnMappings.Add("AttorneyFirm", "AttorneyFirm");
            tableMapping.ColumnMappings.Add("AttorneyELFeeNT", "AttorneyELFeeNT");
            tableMapping.ColumnMappings.Add("AttorneyElseFee", "AttorneyElseFee");
            tableMapping.ColumnMappings.Add("AttorneyElseFeeNT", "AttorneyElseFeeNT");
            tableMapping.ColumnMappings.Add("NotifyFee", "NotifyFee");
            tableMapping.ColumnMappings.Add("NotifyFeeNT", "NotifyFeeNT");
            tableMapping.ColumnMappings.Add("Money", "MoneyKind");
            tableMapping.ColumnMappings.Add("TranFee", "TranFee");
            tableMapping.ColumnMappings.Add("WriteFee", "WriteFee");
            tableMapping.ColumnMappings.Add("SafeFee", "SafeFee");
            tableMapping.ColumnMappings.Add("AttorneyFeeNT", "AttorneyFeeNT");
            tableMapping.ColumnMappings.Add("AttorneyGovFee", "AttorneyGovFee");
            tableMapping.ColumnMappings.Add("MeFee", "MeFee");
            tableMapping.ColumnMappings.Add("Totall", "Totall");
            tableMapping.ColumnMappings.Add("QuotaTotal", "QuotaTotal");
            tableMapping.ColumnMappings.Add("SignDocument", "SignDocument");
            tableMapping.ColumnMappings.Add("ToNT", "ToNT");
            tableMapping.ColumnMappings.Add("ToNTG", "ToNTG");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("Remark_CHS", "Remark_CHS");
            tableMapping.ColumnMappings.Add("Remark_EN", "Remark_EN");
            tableMapping.ColumnMappings.Add("MeRemark", "MeRemark");
            tableMapping.ColumnMappings.Add("MeRemark_CHS", "MeRemark_CHS");
            tableMapping.ColumnMappings.Add("MeRemark_EN", "MeRemark_EN");
            tableMapping.ColumnMappings.Add("Gain", "Gain");
            tableMapping.ColumnMappings.Add("LargeEntity", "LargeEntity");
            tableMapping.ColumnMappings.Add("ForStander", "ForStander");
            tableMapping.ColumnMappings.Add("NofityContent", "NofityContent");
            tableMapping.ColumnMappings.Add("BeforeTotal", "BeforeTotal");
            tableMapping.ColumnMappings.Add("AfterProcess", "AfterProcess");
            tableMapping.ColumnMappings.Add("MoneyKind", "MoneyKind");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::H3Operator.DBHelper.DBSetConnection.ConnectionListDefaultConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          FeeSN, Sort, CountrySymbol, Country, KindSN, Kind, ProcedureName, ProcedureName_CHS, ProcedureName_EN, 
                            PhaseKEY, PhaseName, Examtime, GovFee, GovFeeNT, MoneyKindG, AttorneyKey, AttorneyFee, AttorneySymbol, 
                            AttorneyFirm, AttorneyELFeeNT, AttorneyElseFee, AttorneyElseFeeNT, NotifyFee, NotifyFeeNT, MoneyKind, TranFee, 
                            WriteFee, SafeFee, AttorneyFeeNT, AttorneyGovFee, MeFee, Totall, QuotaTotal, SignDocument, ToNT, ToNTG, 
                            Remark, Remark_CHS, Remark_EN, MeRemark, MeRemark_CHS, MeRemark_EN, Gain, LargeEntity, ForStander, 
                            NofityContent, BeforeTotal, AfterProcess
FROM              V_nTriffList WITH (nolock)
WHERE          (CountrySymbol = @CountrySymbol) AND (KindSN = @KindSN) AND (LargeEntity = @LargeEntity)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountrySymbol", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KindSN", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LargeEntity", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Triff.V_nTriffListDataTable dataTable, string CountrySymbol, string KindSN, global::System.Nullable<bool> LargeEntity) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CountrySymbol == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CountrySymbol));
            }
            if ((KindSN == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KindSN));
            }
            if ((LargeEntity.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(LargeEntity.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Triff.V_nTriffListDataTable GetData(string CountrySymbol, string KindSN, global::System.Nullable<bool> LargeEntity) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CountrySymbol == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CountrySymbol));
            }
            if ((KindSN == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KindSN));
            }
            if ((LargeEntity.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(LargeEntity.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSet_Triff.V_nTriffListDataTable dataTable = new DataSet_Triff.V_nTriffListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PhaseTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PhaseTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PhaseT";
            tableMapping.ColumnMappings.Add("PhaseKey", "PhaseKey");
            tableMapping.ColumnMappings.Add("Sort", "Sort");
            tableMapping.ColumnMappings.Add("PhaseName", "PhaseName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [PhaseT] WHERE (([PhaseKey] = @Original_PhaseKey) AND ((@IsNull_Sort " +
                "= 1 AND [Sort] IS NULL) OR ([Sort] = @Original_Sort)) AND ((@IsNull_PhaseName = " +
                "1 AND [PhaseName] IS NULL) OR ([PhaseName] = @Original_PhaseName)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [PhaseT] ([Sort], [PhaseName]) VALUES (@Sort, @PhaseName);\r\nSELECT Ph" +
                "aseKey, Sort, PhaseName FROM PhaseT WITH (nolock) WHERE (PhaseKey = SCOPE_IDENTI" +
                "TY()) ORDER BY Sort";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [PhaseT] SET [Sort] = @Sort, [PhaseName] = @PhaseName WHERE (([PhaseKey] = @Original_PhaseKey) AND ((@IsNull_Sort = 1 AND [Sort] IS NULL) OR ([Sort] = @Original_Sort)) AND ((@IsNull_PhaseName = 1 AND [PhaseName] IS NULL) OR ([PhaseName] = @Original_PhaseName)));
SELECT PhaseKey, Sort, PhaseName FROM PhaseT WITH (nolock) WHERE (PhaseKey = @PhaseKey) ORDER BY Sort";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseKey", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::H3Operator.DBHelper.DBSetConnection.ConnectionListDefaultConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          PhaseKey, Sort, PhaseName\r\nFROM              PhaseT WITH (nolock)" +
                "\r\nORDER BY   Sort";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Triff.PhaseTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Triff.PhaseTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Triff.PhaseTDataTable dataTable = new DataSet_Triff.PhaseTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Triff.PhaseTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Triff dataSet) {
            return this.Adapter.Update(dataSet, "PhaseT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PhaseKey, global::System.Nullable<int> Original_Sort, string Original_PhaseName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PhaseKey));
            if ((Original_Sort.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Sort.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PhaseName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> Sort, string PhaseName) {
            if ((Sort.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Sort.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PhaseName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PhaseName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> Sort, string PhaseName, int Original_PhaseKey, global::System.Nullable<int> Original_Sort, string Original_PhaseName, int PhaseKey) {
            if ((Sort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Sort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PhaseName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PhaseName));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_PhaseKey));
            if ((Original_Sort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Sort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseName == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_PhaseName));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(PhaseKey));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> Sort, string PhaseName, int Original_PhaseKey, global::System.Nullable<int> Original_Sort, string Original_PhaseName) {
            return this.Update(Sort, PhaseName, Original_PhaseKey, Original_Sort, Original_PhaseName, Original_PhaseKey);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class nTriffTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public nTriffTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "nTriffT";
            tableMapping.ColumnMappings.Add("FeeSN", "FeeSN");
            tableMapping.ColumnMappings.Add("Sort", "Sort");
            tableMapping.ColumnMappings.Add("CountrySymbol", "CountrySymbol");
            tableMapping.ColumnMappings.Add("KindSN", "KindSN");
            tableMapping.ColumnMappings.Add("ProcedureName", "ProcedureName");
            tableMapping.ColumnMappings.Add("ProcedureName_CHS", "ProcedureName_CHS");
            tableMapping.ColumnMappings.Add("ProcedureName_EN", "ProcedureName_EN");
            tableMapping.ColumnMappings.Add("PhaseKEY", "PhaseKEY");
            tableMapping.ColumnMappings.Add("Examtime", "Examtime");
            tableMapping.ColumnMappings.Add("GovFee", "GovFee");
            tableMapping.ColumnMappings.Add("GovFeeNT", "GovFeeNT");
            tableMapping.ColumnMappings.Add("MoneyKindG", "MoneyKindG");
            tableMapping.ColumnMappings.Add("AttorneyKey", "AttorneyKey");
            tableMapping.ColumnMappings.Add("AttorneyFee", "AttorneyFee");
            tableMapping.ColumnMappings.Add("AttorneyELFeeNT", "AttorneyELFeeNT");
            tableMapping.ColumnMappings.Add("AttorneyElseFee", "AttorneyElseFee");
            tableMapping.ColumnMappings.Add("AttorneyElseFeeNT", "AttorneyElseFeeNT");
            tableMapping.ColumnMappings.Add("NotifyFee", "NotifyFee");
            tableMapping.ColumnMappings.Add("NotifyFeeNT", "NotifyFeeNT");
            tableMapping.ColumnMappings.Add("MoneyKind", "MoneyKind");
            tableMapping.ColumnMappings.Add("TranFee", "TranFee");
            tableMapping.ColumnMappings.Add("WriteFee", "WriteFee");
            tableMapping.ColumnMappings.Add("SafeFee", "SafeFee");
            tableMapping.ColumnMappings.Add("AttorneyFeeNT", "AttorneyFeeNT");
            tableMapping.ColumnMappings.Add("AttorneyGovFee", "AttorneyGovFee");
            tableMapping.ColumnMappings.Add("MeFee", "MeFee");
            tableMapping.ColumnMappings.Add("Totall", "Totall");
            tableMapping.ColumnMappings.Add("QuotaTotal", "QuotaTotal");
            tableMapping.ColumnMappings.Add("SignDocument", "SignDocument");
            tableMapping.ColumnMappings.Add("ToNT", "ToNT");
            tableMapping.ColumnMappings.Add("ToNTG", "ToNTG");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("Remark_CHS", "Remark_CHS");
            tableMapping.ColumnMappings.Add("Remark_EN", "Remark_EN");
            tableMapping.ColumnMappings.Add("MeRemark", "MeRemark");
            tableMapping.ColumnMappings.Add("MeRemark_CHS", "MeRemark_CHS");
            tableMapping.ColumnMappings.Add("MeRemark_EN", "MeRemark_EN");
            tableMapping.ColumnMappings.Add("Gain", "Gain");
            tableMapping.ColumnMappings.Add("LargeEntity", "LargeEntity");
            tableMapping.ColumnMappings.Add("ForStander", "ForStander");
            tableMapping.ColumnMappings.Add("NofityContent", "NofityContent");
            tableMapping.ColumnMappings.Add("BeforeTotal", "BeforeTotal");
            tableMapping.ColumnMappings.Add("AfterProcess", "AfterProcess");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("LastModifyDateTime", "LastModifyDateTime");
            tableMapping.ColumnMappings.Add("AttorneyFirm", "AttorneyFirm");
            tableMapping.ColumnMappings.Add("PhaseName", "PhaseName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [nTriffT] WHERE (([FeeSN] = @Original_FeeSN) AND ((@IsNull_Sort = 1 A" +
                "ND [Sort] IS NULL) OR ([Sort] = @Original_Sort)) AND ((@IsNull_CountrySymbol = 1" +
                " AND [CountrySymbol] IS NULL) OR ([CountrySymbol] = @Original_CountrySymbol)) AN" +
                "D ((@IsNull_KindSN = 1 AND [KindSN] IS NULL) OR ([KindSN] = @Original_KindSN)) A" +
                "ND ((@IsNull_ProcedureName = 1 AND [ProcedureName] IS NULL) OR ([ProcedureName] " +
                "= @Original_ProcedureName)) AND ((@IsNull_ProcedureName_CHS = 1 AND [ProcedureNa" +
                "me_CHS] IS NULL) OR ([ProcedureName_CHS] = @Original_ProcedureName_CHS)) AND ((@" +
                "IsNull_ProcedureName_EN = 1 AND [ProcedureName_EN] IS NULL) OR ([ProcedureName_E" +
                "N] = @Original_ProcedureName_EN)) AND ((@IsNull_PhaseKEY = 1 AND [PhaseKEY] IS N" +
                "ULL) OR ([PhaseKEY] = @Original_PhaseKEY)) AND ((@IsNull_Examtime = 1 AND [Examt" +
                "ime] IS NULL) OR ([Examtime] = @Original_Examtime)) AND ((@IsNull_GovFee = 1 AND" +
                " [GovFee] IS NULL) OR ([GovFee] = @Original_GovFee)) AND ((@IsNull_GovFeeNT = 1 " +
                "AND [GovFeeNT] IS NULL) OR ([GovFeeNT] = @Original_GovFeeNT)) AND ((@IsNull_Mone" +
                "yKindG = 1 AND [MoneyKindG] IS NULL) OR ([MoneyKindG] = @Original_MoneyKindG)) A" +
                "ND ((@IsNull_AttorneyKey = 1 AND [AttorneyKey] IS NULL) OR ([AttorneyKey] = @Ori" +
                "ginal_AttorneyKey)) AND ((@IsNull_AttorneyFee = 1 AND [AttorneyFee] IS NULL) OR " +
                "([AttorneyFee] = @Original_AttorneyFee)) AND ((@IsNull_AttorneyELFeeNT = 1 AND [" +
                "AttorneyELFeeNT] IS NULL) OR ([AttorneyELFeeNT] = @Original_AttorneyELFeeNT)) AN" +
                "D ((@IsNull_AttorneyElseFee = 1 AND [AttorneyElseFee] IS NULL) OR ([AttorneyElse" +
                "Fee] = @Original_AttorneyElseFee)) AND ((@IsNull_AttorneyElseFeeNT = 1 AND [Atto" +
                "rneyElseFeeNT] IS NULL) OR ([AttorneyElseFeeNT] = @Original_AttorneyElseFeeNT)) " +
                "AND ((@IsNull_NotifyFee = 1 AND [NotifyFee] IS NULL) OR ([NotifyFee] = @Original" +
                "_NotifyFee)) AND ((@IsNull_NotifyFeeNT = 1 AND [NotifyFeeNT] IS NULL) OR ([Notif" +
                "yFeeNT] = @Original_NotifyFeeNT)) AND ((@IsNull_MoneyKind = 1 AND [MoneyKind] IS" +
                " NULL) OR ([MoneyKind] = @Original_MoneyKind)) AND ((@IsNull_TranFee = 1 AND [Tr" +
                "anFee] IS NULL) OR ([TranFee] = @Original_TranFee)) AND ((@IsNull_WriteFee = 1 A" +
                "ND [WriteFee] IS NULL) OR ([WriteFee] = @Original_WriteFee)) AND ((@IsNull_SafeF" +
                "ee = 1 AND [SafeFee] IS NULL) OR ([SafeFee] = @Original_SafeFee)) AND ((@IsNull_" +
                "AttorneyFeeNT = 1 AND [AttorneyFeeNT] IS NULL) OR ([AttorneyFeeNT] = @Original_A" +
                "ttorneyFeeNT)) AND ((@IsNull_AttorneyGovFee = 1 AND [AttorneyGovFee] IS NULL) OR" +
                " ([AttorneyGovFee] = @Original_AttorneyGovFee)) AND ((@IsNull_MeFee = 1 AND [MeF" +
                "ee] IS NULL) OR ([MeFee] = @Original_MeFee)) AND ((@IsNull_Totall = 1 AND [Total" +
                "l] IS NULL) OR ([Totall] = @Original_Totall)) AND ((@IsNull_QuotaTotal = 1 AND [" +
                "QuotaTotal] IS NULL) OR ([QuotaTotal] = @Original_QuotaTotal)) AND ((@IsNull_Sig" +
                "nDocument = 1 AND [SignDocument] IS NULL) OR ([SignDocument] = @Original_SignDoc" +
                "ument)) AND ((@IsNull_ToNT = 1 AND [ToNT] IS NULL) OR ([ToNT] = @Original_ToNT))" +
                " AND ((@IsNull_ToNTG = 1 AND [ToNTG] IS NULL) OR ([ToNTG] = @Original_ToNTG)) AN" +
                "D ((@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) A" +
                "ND ((@IsNull_Remark_CHS = 1 AND [Remark_CHS] IS NULL) OR ([Remark_CHS] = @Origin" +
                "al_Remark_CHS)) AND ((@IsNull_Remark_EN = 1 AND [Remark_EN] IS NULL) OR ([Remark" +
                "_EN] = @Original_Remark_EN)) AND ((@IsNull_MeRemark = 1 AND [MeRemark] IS NULL) " +
                "OR ([MeRemark] = @Original_MeRemark)) AND ((@IsNull_MeRemark_CHS = 1 AND [MeRema" +
                "rk_CHS] IS NULL) OR ([MeRemark_CHS] = @Original_MeRemark_CHS)) AND ((@IsNull_MeR" +
                "emark_EN = 1 AND [MeRemark_EN] IS NULL) OR ([MeRemark_EN] = @Original_MeRemark_E" +
                "N)) AND ((@IsNull_Gain = 1 AND [Gain] IS NULL) OR ([Gain] = @Original_Gain)) AND" +
                " ((@IsNull_LargeEntity = 1 AND [LargeEntity] IS NULL) OR ([LargeEntity] = @Origi" +
                "nal_LargeEntity)) AND ((@IsNull_ForStander = 1 AND [ForStander] IS NULL) OR ([Fo" +
                "rStander] = @Original_ForStander)) AND ((@IsNull_NofityContent = 1 AND [NofityCo" +
                "ntent] IS NULL) OR ([NofityContent] = @Original_NofityContent)) AND ((@IsNull_Be" +
                "foreTotal = 1 AND [BeforeTotal] IS NULL) OR ([BeforeTotal] = @Original_BeforeTot" +
                "al)) AND ((@IsNull_AfterProcess = 1 AND [AfterProcess] IS NULL) OR ([AfterProces" +
                "s] = @Original_AfterProcess)) AND ((@IsNull_CreateDateTime = 1 AND [CreateDateTi" +
                "me] IS NULL) OR ([CreateDateTime] = @Original_CreateDateTime)) AND ((@IsNull_Las" +
                "tModifyDateTime = 1 AND [LastModifyDateTime] IS NULL) OR ([LastModifyDateTime] =" +
                " @Original_LastModifyDateTime)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeeSN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeSN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountrySymbol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountrySymbol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KindSN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KindSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcedureName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcedureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcedureName_CHS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_CHS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcedureName_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_CHS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcedureName_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcedureName_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKEY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Examtime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Examtime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Examtime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Examtime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GovFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GovFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GovFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GovFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GovFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoneyKindG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKindG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoneyKindG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKindG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyKey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyELFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyELFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyELFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyELFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyElseFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyElseFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyElseFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyElseFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyElseFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyElseFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NotifyFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotifyFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NotifyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NotifyFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotifyFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NotifyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoneyKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKind", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoneyKind", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TranFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TranFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TranFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "TranFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WriteFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WriteFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WriteFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "WriteFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SafeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SafeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SafeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SafeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyGovFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyGovFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyGovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyGovFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Totall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Totall", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Totall", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Totall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QuotaTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuotaTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "QuotaTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SignDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SignDocument", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ToNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ToNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ToNTG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToNTG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ToNTG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNTG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark_CHS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_CHS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_CHS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeRemark_CHS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_CHS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeRemark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_CHS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeRemark_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeRemark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gain", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gain", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gain", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Gain", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LargeEntity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LargeEntity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForStander", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForStander", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForStander", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForStander", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NofityContent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NofityContent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NofityContent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NofityContent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BeforeTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeforeTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeforeTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "BeforeTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AfterProcess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AfterProcess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AfterProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AfterProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreateDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastModifyDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModifyDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastModifyDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModifyDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [nTriffT] ([Sort], [CountrySymbol], [KindSN], [ProcedureName], [Proce" +
                "dureName_CHS], [ProcedureName_EN], [PhaseKEY], [Examtime], [GovFee], [GovFeeNT]," +
                " [MoneyKindG], [AttorneyKey], [AttorneyFee], [AttorneyELFeeNT], [AttorneyElseFee" +
                "], [AttorneyElseFeeNT], [NotifyFee], [NotifyFeeNT], [MoneyKind], [TranFee], [Wri" +
                "teFee], [SafeFee], [AttorneyFeeNT], [AttorneyGovFee], [MeFee], [Totall], [QuotaT" +
                "otal], [SignDocument], [ToNT], [ToNTG], [Remark], [Remark_CHS], [Remark_EN], [Me" +
                "Remark], [MeRemark_CHS], [MeRemark_EN], [Gain], [LargeEntity], [ForStander], [No" +
                "fityContent], [BeforeTotal], [AfterProcess], [CreateDateTime], [LastModifyDateTi" +
                "me]) VALUES (@Sort, @CountrySymbol, @KindSN, @ProcedureName, @ProcedureName_CHS," +
                " @ProcedureName_EN, @PhaseKEY, @Examtime, @GovFee, @GovFeeNT, @MoneyKindG, @Atto" +
                "rneyKey, @AttorneyFee, @AttorneyELFeeNT, @AttorneyElseFee, @AttorneyElseFeeNT, @" +
                "NotifyFee, @NotifyFeeNT, @MoneyKind, @TranFee, @WriteFee, @SafeFee, @AttorneyFee" +
                "NT, @AttorneyGovFee, @MeFee, @Totall, @QuotaTotal, @SignDocument, @ToNT, @ToNTG," +
                " @Remark, @Remark_CHS, @Remark_EN, @MeRemark, @MeRemark_CHS, @MeRemark_EN, @Gain" +
                ", @LargeEntity, @ForStander, @NofityContent, @BeforeTotal, @AfterProcess, @Creat" +
                "eDateTime, @LastModifyDateTime);\r\nSELECT FeeSN, Sort, CountrySymbol, KindSN, Pro" +
                "cedureName, ProcedureName_CHS, ProcedureName_EN, PhaseKEY, Examtime, GovFee, Gov" +
                "FeeNT, MoneyKindG, AttorneyKey, AttorneyFee, AttorneyELFeeNT, AttorneyElseFee, A" +
                "ttorneyElseFeeNT, NotifyFee, NotifyFeeNT, MoneyKind, TranFee, WriteFee, SafeFee," +
                " AttorneyFeeNT, AttorneyGovFee, MeFee, Totall, QuotaTotal, SignDocument, ToNT, T" +
                "oNTG, Remark, Remark_CHS, Remark_EN, MeRemark, MeRemark_CHS, MeRemark_EN, Gain, " +
                "LargeEntity, ForStander, NofityContent, BeforeTotal, AfterProcess, CreateDateTim" +
                "e, LastModifyDateTime FROM nTriffT WHERE (FeeSN = SCOPE_IDENTITY()) ORDER BY Sor" +
                "t";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountrySymbol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KindSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_CHS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Examtime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Examtime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GovFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoneyKindG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKindG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyELFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyELFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyElseFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyElseFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NotifyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NotifyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoneyKind", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TranFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "TranFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WriteFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "WriteFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SafeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SafeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyGovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyGovFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Totall", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Totall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotaTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "QuotaTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SignDocument", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToNTG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNTG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_CHS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeRemark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_CHS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeRemark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gain", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Gain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LargeEntity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForStander", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForStander", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NofityContent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NofityContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeforeTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "BeforeTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AfterProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AfterProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModifyDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModifyDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [nTriffT] SET [Sort] = @Sort, [CountrySymbol] = @CountrySymbol, [KindSN] =" +
                " @KindSN, [ProcedureName] = @ProcedureName, [ProcedureName_CHS] = @ProcedureName" +
                "_CHS, [ProcedureName_EN] = @ProcedureName_EN, [PhaseKEY] = @PhaseKEY, [Examtime]" +
                " = @Examtime, [GovFee] = @GovFee, [GovFeeNT] = @GovFeeNT, [MoneyKindG] = @MoneyK" +
                "indG, [AttorneyKey] = @AttorneyKey, [AttorneyFee] = @AttorneyFee, [AttorneyELFee" +
                "NT] = @AttorneyELFeeNT, [AttorneyElseFee] = @AttorneyElseFee, [AttorneyElseFeeNT" +
                "] = @AttorneyElseFeeNT, [NotifyFee] = @NotifyFee, [NotifyFeeNT] = @NotifyFeeNT, " +
                "[MoneyKind] = @MoneyKind, [TranFee] = @TranFee, [WriteFee] = @WriteFee, [SafeFee" +
                "] = @SafeFee, [AttorneyFeeNT] = @AttorneyFeeNT, [AttorneyGovFee] = @AttorneyGovF" +
                "ee, [MeFee] = @MeFee, [Totall] = @Totall, [QuotaTotal] = @QuotaTotal, [SignDocum" +
                "ent] = @SignDocument, [ToNT] = @ToNT, [ToNTG] = @ToNTG, [Remark] = @Remark, [Rem" +
                "ark_CHS] = @Remark_CHS, [Remark_EN] = @Remark_EN, [MeRemark] = @MeRemark, [MeRem" +
                "ark_CHS] = @MeRemark_CHS, [MeRemark_EN] = @MeRemark_EN, [Gain] = @Gain, [LargeEn" +
                "tity] = @LargeEntity, [ForStander] = @ForStander, [NofityContent] = @NofityConte" +
                "nt, [BeforeTotal] = @BeforeTotal, [AfterProcess] = @AfterProcess, [CreateDateTim" +
                "e] = @CreateDateTime, [LastModifyDateTime] = @LastModifyDateTime WHERE (([FeeSN]" +
                " = @Original_FeeSN) AND ((@IsNull_Sort = 1 AND [Sort] IS NULL) OR ([Sort] = @Ori" +
                "ginal_Sort)) AND ((@IsNull_CountrySymbol = 1 AND [CountrySymbol] IS NULL) OR ([C" +
                "ountrySymbol] = @Original_CountrySymbol)) AND ((@IsNull_KindSN = 1 AND [KindSN] " +
                "IS NULL) OR ([KindSN] = @Original_KindSN)) AND ((@IsNull_ProcedureName = 1 AND [" +
                "ProcedureName] IS NULL) OR ([ProcedureName] = @Original_ProcedureName)) AND ((@I" +
                "sNull_ProcedureName_CHS = 1 AND [ProcedureName_CHS] IS NULL) OR ([ProcedureName_" +
                "CHS] = @Original_ProcedureName_CHS)) AND ((@IsNull_ProcedureName_EN = 1 AND [Pro" +
                "cedureName_EN] IS NULL) OR ([ProcedureName_EN] = @Original_ProcedureName_EN)) AN" +
                "D ((@IsNull_PhaseKEY = 1 AND [PhaseKEY] IS NULL) OR ([PhaseKEY] = @Original_Phas" +
                "eKEY)) AND ((@IsNull_Examtime = 1 AND [Examtime] IS NULL) OR ([Examtime] = @Orig" +
                "inal_Examtime)) AND ((@IsNull_GovFee = 1 AND [GovFee] IS NULL) OR ([GovFee] = @O" +
                "riginal_GovFee)) AND ((@IsNull_GovFeeNT = 1 AND [GovFeeNT] IS NULL) OR ([GovFeeN" +
                "T] = @Original_GovFeeNT)) AND ((@IsNull_MoneyKindG = 1 AND [MoneyKindG] IS NULL)" +
                " OR ([MoneyKindG] = @Original_MoneyKindG)) AND ((@IsNull_AttorneyKey = 1 AND [At" +
                "torneyKey] IS NULL) OR ([AttorneyKey] = @Original_AttorneyKey)) AND ((@IsNull_At" +
                "torneyFee = 1 AND [AttorneyFee] IS NULL) OR ([AttorneyFee] = @Original_AttorneyF" +
                "ee)) AND ((@IsNull_AttorneyELFeeNT = 1 AND [AttorneyELFeeNT] IS NULL) OR ([Attor" +
                "neyELFeeNT] = @Original_AttorneyELFeeNT)) AND ((@IsNull_AttorneyElseFee = 1 AND " +
                "[AttorneyElseFee] IS NULL) OR ([AttorneyElseFee] = @Original_AttorneyElseFee)) A" +
                "ND ((@IsNull_AttorneyElseFeeNT = 1 AND [AttorneyElseFeeNT] IS NULL) OR ([Attorne" +
                "yElseFeeNT] = @Original_AttorneyElseFeeNT)) AND ((@IsNull_NotifyFee = 1 AND [Not" +
                "ifyFee] IS NULL) OR ([NotifyFee] = @Original_NotifyFee)) AND ((@IsNull_NotifyFee" +
                "NT = 1 AND [NotifyFeeNT] IS NULL) OR ([NotifyFeeNT] = @Original_NotifyFeeNT)) AN" +
                "D ((@IsNull_MoneyKind = 1 AND [MoneyKind] IS NULL) OR ([MoneyKind] = @Original_M" +
                "oneyKind)) AND ((@IsNull_TranFee = 1 AND [TranFee] IS NULL) OR ([TranFee] = @Ori" +
                "ginal_TranFee)) AND ((@IsNull_WriteFee = 1 AND [WriteFee] IS NULL) OR ([WriteFee" +
                "] = @Original_WriteFee)) AND ((@IsNull_SafeFee = 1 AND [SafeFee] IS NULL) OR ([S" +
                "afeFee] = @Original_SafeFee)) AND ((@IsNull_AttorneyFeeNT = 1 AND [AttorneyFeeNT" +
                "] IS NULL) OR ([AttorneyFeeNT] = @Original_AttorneyFeeNT)) AND ((@IsNull_Attorne" +
                "yGovFee = 1 AND [AttorneyGovFee] IS NULL) OR ([AttorneyGovFee] = @Original_Attor" +
                "neyGovFee)) AND ((@IsNull_MeFee = 1 AND [MeFee] IS NULL) OR ([MeFee] = @Original" +
                "_MeFee)) AND ((@IsNull_Totall = 1 AND [Totall] IS NULL) OR ([Totall] = @Original" +
                "_Totall)) AND ((@IsNull_QuotaTotal = 1 AND [QuotaTotal] IS NULL) OR ([QuotaTotal" +
                "] = @Original_QuotaTotal)) AND ((@IsNull_SignDocument = 1 AND [SignDocument] IS " +
                "NULL) OR ([SignDocument] = @Original_SignDocument)) AND ((@IsNull_ToNT = 1 AND [" +
                "ToNT] IS NULL) OR ([ToNT] = @Original_ToNT)) AND ((@IsNull_ToNTG = 1 AND [ToNTG]" +
                " IS NULL) OR ([ToNTG] = @Original_ToNTG)) AND ((@IsNull_Remark = 1 AND [Remark] " +
                "IS NULL) OR ([Remark] = @Original_Remark)) AND ((@IsNull_Remark_CHS = 1 AND [Rem" +
                "ark_CHS] IS NULL) OR ([Remark_CHS] = @Original_Remark_CHS)) AND ((@IsNull_Remark" +
                "_EN = 1 AND [Remark_EN] IS NULL) OR ([Remark_EN] = @Original_Remark_EN)) AND ((@" +
                "IsNull_MeRemark = 1 AND [MeRemark] IS NULL) OR ([MeRemark] = @Original_MeRemark)" +
                ") AND ((@IsNull_MeRemark_CHS = 1 AND [MeRemark_CHS] IS NULL) OR ([MeRemark_CHS] " +
                "= @Original_MeRemark_CHS)) AND ((@IsNull_MeRemark_EN = 1 AND [MeRemark_EN] IS NU" +
                "LL) OR ([MeRemark_EN] = @Original_MeRemark_EN)) AND ((@IsNull_Gain = 1 AND [Gain" +
                "] IS NULL) OR ([Gain] = @Original_Gain)) AND ((@IsNull_LargeEntity = 1 AND [Larg" +
                "eEntity] IS NULL) OR ([LargeEntity] = @Original_LargeEntity)) AND ((@IsNull_ForS" +
                "tander = 1 AND [ForStander] IS NULL) OR ([ForStander] = @Original_ForStander)) A" +
                "ND ((@IsNull_NofityContent = 1 AND [NofityContent] IS NULL) OR ([NofityContent] " +
                "= @Original_NofityContent)) AND ((@IsNull_BeforeTotal = 1 AND [BeforeTotal] IS N" +
                "ULL) OR ([BeforeTotal] = @Original_BeforeTotal)) AND ((@IsNull_AfterProcess = 1 " +
                "AND [AfterProcess] IS NULL) OR ([AfterProcess] = @Original_AfterProcess)) AND ((" +
                "@IsNull_CreateDateTime = 1 AND [CreateDateTime] IS NULL) OR ([CreateDateTime] = " +
                "@Original_CreateDateTime)) AND ((@IsNull_LastModifyDateTime = 1 AND [LastModifyD" +
                "ateTime] IS NULL) OR ([LastModifyDateTime] = @Original_LastModifyDateTime)));\r\nS" +
                "ELECT FeeSN, Sort, CountrySymbol, KindSN, ProcedureName, ProcedureName_CHS, Proc" +
                "edureName_EN, PhaseKEY, Examtime, GovFee, GovFeeNT, MoneyKindG, AttorneyKey, Att" +
                "orneyFee, AttorneyELFeeNT, AttorneyElseFee, AttorneyElseFeeNT, NotifyFee, Notify" +
                "FeeNT, MoneyKind, TranFee, WriteFee, SafeFee, AttorneyFeeNT, AttorneyGovFee, MeF" +
                "ee, Totall, QuotaTotal, SignDocument, ToNT, ToNTG, Remark, Remark_CHS, Remark_EN" +
                ", MeRemark, MeRemark_CHS, MeRemark_EN, Gain, LargeEntity, ForStander, NofityCont" +
                "ent, BeforeTotal, AfterProcess, CreateDateTime, LastModifyDateTime FROM nTriffT " +
                "WHERE (FeeSN = @FeeSN) ORDER BY Sort";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountrySymbol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KindSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_CHS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Examtime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Examtime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GovFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoneyKindG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKindG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyELFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyELFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyElseFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyElseFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NotifyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NotifyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoneyKind", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TranFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "TranFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WriteFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "WriteFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SafeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SafeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFeeNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttorneyGovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyGovFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Totall", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Totall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotaTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "QuotaTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SignDocument", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToNTG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNTG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_CHS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeRemark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_CHS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeRemark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gain", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Gain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LargeEntity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForStander", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForStander", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NofityContent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NofityContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeforeTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "BeforeTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AfterProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AfterProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModifyDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModifyDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeeSN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeeSN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountrySymbol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountrySymbol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KindSN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KindSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcedureName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcedureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcedureName_CHS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_CHS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcedureName_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_CHS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcedureName_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcedureName_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKEY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Examtime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Examtime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Examtime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Examtime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GovFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GovFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GovFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GovFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GovFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "GovFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoneyKindG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKindG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoneyKindG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKindG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyKey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyELFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyELFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyELFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyELFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyElseFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyElseFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyElseFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyElseFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyElseFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyElseFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyElseFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NotifyFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotifyFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NotifyFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NotifyFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotifyFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NotifyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "NotifyFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoneyKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKind", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoneyKind", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoneyKind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TranFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TranFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TranFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "TranFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WriteFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WriteFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WriteFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "WriteFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SafeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SafeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SafeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SafeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyFeeNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyFeeNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyFeeNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyFeeNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttorneyGovFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttorneyGovFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttorneyGovFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "AttorneyGovFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Totall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Totall", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Totall", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Totall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QuotaTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuotaTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "QuotaTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SignDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SignDocument", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SignDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ToNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToNT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ToNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ToNTG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToNTG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ToNTG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "ToNTG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark_CHS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_CHS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_CHS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeRemark_CHS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_CHS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeRemark_CHS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_CHS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeRemark_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeRemark_EN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeRemark_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gain", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gain", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gain", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Gain", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LargeEntity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LargeEntity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForStander", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForStander", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForStander", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForStander", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NofityContent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NofityContent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NofityContent", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NofityContent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BeforeTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeforeTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeforeTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "BeforeTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AfterProcess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AfterProcess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AfterProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AfterProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreateDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastModifyDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModifyDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastModifyDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModifyDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeeSN", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FeeSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::H3Operator.DBHelper.DBSetConnection.ConnectionListDefaultConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          nTriffT.FeeSN, nTriffT.Sort, nTriffT.CountrySymbol, nTriffT.KindS" +
                "N, nTriffT.ProcedureName, \r\n                            nTriffT.ProcedureName_CH" +
                "S, nTriffT.ProcedureName_EN, nTriffT.PhaseKEY, nTriffT.Examtime, nTriffT.GovFee," +
                " \r\n                            nTriffT.GovFeeNT, nTriffT.MoneyKindG, nTriffT.Att" +
                "orneyKey, nTriffT.AttorneyFee, nTriffT.AttorneyELFeeNT, \r\n                      " +
                "      nTriffT.AttorneyElseFee, nTriffT.AttorneyElseFeeNT, nTriffT.NotifyFee, nTr" +
                "iffT.NotifyFeeNT, nTriffT.MoneyKind, \r\n                            nTriffT.TranF" +
                "ee, nTriffT.WriteFee, nTriffT.SafeFee, nTriffT.AttorneyFeeNT, nTriffT.AttorneyGo" +
                "vFee, nTriffT.MeFee, \r\n                            nTriffT.Totall, nTriffT.Quota" +
                "Total, nTriffT.SignDocument, nTriffT.ToNT, nTriffT.ToNTG, nTriffT.Remark, \r\n    " +
                "                        nTriffT.Remark_CHS, nTriffT.Remark_EN, nTriffT.MeRemark," +
                " nTriffT.MeRemark_CHS, nTriffT.MeRemark_EN, \r\n                            nTriff" +
                "T.Gain, nTriffT.LargeEntity, nTriffT.ForStander, nTriffT.NofityContent, nTriffT." +
                "BeforeTotal, nTriffT.AfterProcess, \r\n                            nTriffT.CreateD" +
                "ateTime, nTriffT.LastModifyDateTime, AttorneyT.AttorneyFirm, PhaseT.PhaseName\r\nF" +
                "ROM              nTriffT WITH (nolock) LEFT OUTER JOIN\r\n                        " +
                "    PhaseT ON nTriffT.PhaseKEY = PhaseT.PhaseKey LEFT OUTER JOIN\r\n              " +
                "              AttorneyT ON nTriffT.AttorneyKey = AttorneyT.AttorneyKey\r\nWHERE   " +
                "       (nTriffT.CountrySymbol = @CountrySymbol) AND (nTriffT.KindSN = @KindSN) A" +
                "ND (nTriffT.LargeEntity = @LargeEntity)\r\nORDER BY   nTriffT.Sort";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountrySymbol", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "CountrySymbol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KindSN", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KindSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LargeEntity", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "LargeEntity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Triff.nTriffTDataTable dataTable, string CountrySymbol, string KindSN, global::System.Nullable<bool> LargeEntity) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CountrySymbol == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CountrySymbol));
            }
            if ((KindSN == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KindSN));
            }
            if ((LargeEntity.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(LargeEntity.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Triff.nTriffTDataTable GetData(string CountrySymbol, string KindSN, global::System.Nullable<bool> LargeEntity) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CountrySymbol == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CountrySymbol));
            }
            if ((KindSN == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KindSN));
            }
            if ((LargeEntity.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(LargeEntity.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSet_Triff.nTriffTDataTable dataTable = new DataSet_Triff.nTriffTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Triff.nTriffTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Triff dataSet) {
            return this.Adapter.Update(dataSet, "nTriffT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_FeeSN, 
                    global::System.Nullable<int> Original_Sort, 
                    string Original_CountrySymbol, 
                    string Original_KindSN, 
                    string Original_ProcedureName, 
                    string Original_ProcedureName_CHS, 
                    string Original_ProcedureName_EN, 
                    global::System.Nullable<int> Original_PhaseKEY, 
                    string Original_Examtime, 
                    global::System.Nullable<decimal> Original_GovFee, 
                    global::System.Nullable<decimal> Original_GovFeeNT, 
                    string Original_MoneyKindG, 
                    global::System.Nullable<int> Original_AttorneyKey, 
                    global::System.Nullable<decimal> Original_AttorneyFee, 
                    global::System.Nullable<decimal> Original_AttorneyELFeeNT, 
                    global::System.Nullable<decimal> Original_AttorneyElseFee, 
                    global::System.Nullable<decimal> Original_AttorneyElseFeeNT, 
                    global::System.Nullable<decimal> Original_NotifyFee, 
                    global::System.Nullable<decimal> Original_NotifyFeeNT, 
                    string Original_MoneyKind, 
                    global::System.Nullable<decimal> Original_TranFee, 
                    global::System.Nullable<decimal> Original_WriteFee, 
                    global::System.Nullable<decimal> Original_SafeFee, 
                    global::System.Nullable<decimal> Original_AttorneyFeeNT, 
                    global::System.Nullable<decimal> Original_AttorneyGovFee, 
                    global::System.Nullable<decimal> Original_MeFee, 
                    global::System.Nullable<decimal> Original_Totall, 
                    global::System.Nullable<decimal> Original_QuotaTotal, 
                    string Original_SignDocument, 
                    global::System.Nullable<decimal> Original_ToNT, 
                    global::System.Nullable<decimal> Original_ToNTG, 
                    string Original_Remark, 
                    string Original_Remark_CHS, 
                    string Original_Remark_EN, 
                    string Original_MeRemark, 
                    string Original_MeRemark_CHS, 
                    string Original_MeRemark_EN, 
                    global::System.Nullable<decimal> Original_Gain, 
                    global::System.Nullable<bool> Original_LargeEntity, 
                    global::System.Nullable<bool> Original_ForStander, 
                    string Original_NofityContent, 
                    global::System.Nullable<decimal> Original_BeforeTotal, 
                    string Original_AfterProcess, 
                    global::System.Nullable<global::System.DateTime> Original_CreateDateTime, 
                    global::System.Nullable<global::System.DateTime> Original_LastModifyDateTime) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_FeeSN));
            if ((Original_Sort.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Sort.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_CountrySymbol == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CountrySymbol));
            }
            if ((Original_KindSN == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_KindSN));
            }
            if ((Original_ProcedureName == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ProcedureName));
            }
            if ((Original_ProcedureName_CHS == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ProcedureName_CHS));
            }
            if ((Original_ProcedureName_EN == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ProcedureName_EN));
            }
            if ((Original_PhaseKEY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_PhaseKEY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Examtime == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Examtime));
            }
            if ((Original_GovFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_GovFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_GovFeeNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_GovFeeNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_MoneyKindG == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MoneyKindG));
            }
            if ((Original_AttorneyKey.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_AttorneyKey.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_AttorneyFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyELFeeNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_AttorneyELFeeNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyElseFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_AttorneyElseFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyElseFeeNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_AttorneyElseFeeNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_NotifyFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_NotifyFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_NotifyFeeNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_NotifyFeeNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_MoneyKind == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_MoneyKind));
            }
            if ((Original_TranFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_TranFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_WriteFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_WriteFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SafeFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_SafeFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyFeeNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_AttorneyFeeNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyGovFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_AttorneyGovFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_MeFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_MeFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Totall.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_Totall.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_QuotaTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_QuotaTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_SignDocument == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_SignDocument));
            }
            if ((Original_ToNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_ToNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_ToNTG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_ToNTG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Remark == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_Remark));
            }
            if ((Original_Remark_CHS == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_Remark_CHS));
            }
            if ((Original_Remark_EN == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_Remark_EN));
            }
            if ((Original_MeRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_MeRemark));
            }
            if ((Original_MeRemark_CHS == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_MeRemark_CHS));
            }
            if ((Original_MeRemark_EN == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_MeRemark_EN));
            }
            if ((Original_Gain.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((decimal)(Original_Gain.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_LargeEntity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((bool)(Original_LargeEntity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_ForStander.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((bool)(Original_ForStander.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_NofityContent == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_NofityContent));
            }
            if ((Original_BeforeTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((decimal)(Original_BeforeTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_AfterProcess == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_AfterProcess));
            }
            if ((Original_CreateDateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((System.DateTime)(Original_CreateDateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_LastModifyDateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((System.DateTime)(Original_LastModifyDateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> Sort, 
                    string CountrySymbol, 
                    string KindSN, 
                    string ProcedureName, 
                    string ProcedureName_CHS, 
                    string ProcedureName_EN, 
                    global::System.Nullable<int> PhaseKEY, 
                    string Examtime, 
                    global::System.Nullable<decimal> GovFee, 
                    global::System.Nullable<decimal> GovFeeNT, 
                    string MoneyKindG, 
                    global::System.Nullable<int> AttorneyKey, 
                    global::System.Nullable<decimal> AttorneyFee, 
                    global::System.Nullable<decimal> AttorneyELFeeNT, 
                    global::System.Nullable<decimal> AttorneyElseFee, 
                    global::System.Nullable<decimal> AttorneyElseFeeNT, 
                    global::System.Nullable<decimal> NotifyFee, 
                    global::System.Nullable<decimal> NotifyFeeNT, 
                    string MoneyKind, 
                    global::System.Nullable<decimal> TranFee, 
                    global::System.Nullable<decimal> WriteFee, 
                    global::System.Nullable<decimal> SafeFee, 
                    global::System.Nullable<decimal> AttorneyFeeNT, 
                    global::System.Nullable<decimal> AttorneyGovFee, 
                    global::System.Nullable<decimal> MeFee, 
                    global::System.Nullable<decimal> Totall, 
                    global::System.Nullable<decimal> QuotaTotal, 
                    string SignDocument, 
                    global::System.Nullable<decimal> ToNT, 
                    global::System.Nullable<decimal> ToNTG, 
                    string Remark, 
                    string Remark_CHS, 
                    string Remark_EN, 
                    string MeRemark, 
                    string MeRemark_CHS, 
                    string MeRemark_EN, 
                    global::System.Nullable<decimal> Gain, 
                    global::System.Nullable<bool> LargeEntity, 
                    global::System.Nullable<bool> ForStander, 
                    string NofityContent, 
                    global::System.Nullable<decimal> BeforeTotal, 
                    string AfterProcess, 
                    global::System.Nullable<global::System.DateTime> CreateDateTime, 
                    global::System.Nullable<global::System.DateTime> LastModifyDateTime) {
            if ((Sort.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Sort.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CountrySymbol == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CountrySymbol));
            }
            if ((KindSN == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(KindSN));
            }
            if ((ProcedureName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ProcedureName));
            }
            if ((ProcedureName_CHS == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ProcedureName_CHS));
            }
            if ((ProcedureName_EN == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ProcedureName_EN));
            }
            if ((PhaseKEY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PhaseKEY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Examtime == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Examtime));
            }
            if ((GovFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(GovFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((GovFeeNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(GovFeeNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MoneyKindG == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(MoneyKindG));
            }
            if ((AttorneyKey.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(AttorneyKey.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AttorneyFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(AttorneyFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AttorneyELFeeNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(AttorneyELFeeNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AttorneyElseFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(AttorneyElseFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AttorneyElseFeeNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(AttorneyElseFeeNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NotifyFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(NotifyFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NotifyFeeNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(NotifyFeeNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((MoneyKind == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(MoneyKind));
            }
            if ((TranFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(TranFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((WriteFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(WriteFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((SafeFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(SafeFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((AttorneyFeeNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(AttorneyFeeNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((AttorneyGovFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(AttorneyGovFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((MeFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(MeFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Totall.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(Totall.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((QuotaTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(QuotaTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SignDocument == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(SignDocument));
            }
            if ((ToNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(ToNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ToNTG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(ToNTG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Remark == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Remark));
            }
            if ((Remark_CHS == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Remark_CHS));
            }
            if ((Remark_EN == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Remark_EN));
            }
            if ((MeRemark == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(MeRemark));
            }
            if ((MeRemark_CHS == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(MeRemark_CHS));
            }
            if ((MeRemark_EN == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(MeRemark_EN));
            }
            if ((Gain.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(Gain.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((LargeEntity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(LargeEntity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ForStander.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(ForStander.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((NofityContent == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(NofityContent));
            }
            if ((BeforeTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(BeforeTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((AfterProcess == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(AfterProcess));
            }
            if ((CreateDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(CreateDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((LastModifyDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(LastModifyDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Sort, 
                    string CountrySymbol, 
                    string KindSN, 
                    string ProcedureName, 
                    string ProcedureName_CHS, 
                    string ProcedureName_EN, 
                    global::System.Nullable<int> PhaseKEY, 
                    string Examtime, 
                    global::System.Nullable<decimal> GovFee, 
                    global::System.Nullable<decimal> GovFeeNT, 
                    string MoneyKindG, 
                    global::System.Nullable<int> AttorneyKey, 
                    global::System.Nullable<decimal> AttorneyFee, 
                    global::System.Nullable<decimal> AttorneyELFeeNT, 
                    global::System.Nullable<decimal> AttorneyElseFee, 
                    global::System.Nullable<decimal> AttorneyElseFeeNT, 
                    global::System.Nullable<decimal> NotifyFee, 
                    global::System.Nullable<decimal> NotifyFeeNT, 
                    string MoneyKind, 
                    global::System.Nullable<decimal> TranFee, 
                    global::System.Nullable<decimal> WriteFee, 
                    global::System.Nullable<decimal> SafeFee, 
                    global::System.Nullable<decimal> AttorneyFeeNT, 
                    global::System.Nullable<decimal> AttorneyGovFee, 
                    global::System.Nullable<decimal> MeFee, 
                    global::System.Nullable<decimal> Totall, 
                    global::System.Nullable<decimal> QuotaTotal, 
                    string SignDocument, 
                    global::System.Nullable<decimal> ToNT, 
                    global::System.Nullable<decimal> ToNTG, 
                    string Remark, 
                    string Remark_CHS, 
                    string Remark_EN, 
                    string MeRemark, 
                    string MeRemark_CHS, 
                    string MeRemark_EN, 
                    global::System.Nullable<decimal> Gain, 
                    global::System.Nullable<bool> LargeEntity, 
                    global::System.Nullable<bool> ForStander, 
                    string NofityContent, 
                    global::System.Nullable<decimal> BeforeTotal, 
                    string AfterProcess, 
                    global::System.Nullable<global::System.DateTime> CreateDateTime, 
                    global::System.Nullable<global::System.DateTime> LastModifyDateTime, 
                    int Original_FeeSN, 
                    global::System.Nullable<int> Original_Sort, 
                    string Original_CountrySymbol, 
                    string Original_KindSN, 
                    string Original_ProcedureName, 
                    string Original_ProcedureName_CHS, 
                    string Original_ProcedureName_EN, 
                    global::System.Nullable<int> Original_PhaseKEY, 
                    string Original_Examtime, 
                    global::System.Nullable<decimal> Original_GovFee, 
                    global::System.Nullable<decimal> Original_GovFeeNT, 
                    string Original_MoneyKindG, 
                    global::System.Nullable<int> Original_AttorneyKey, 
                    global::System.Nullable<decimal> Original_AttorneyFee, 
                    global::System.Nullable<decimal> Original_AttorneyELFeeNT, 
                    global::System.Nullable<decimal> Original_AttorneyElseFee, 
                    global::System.Nullable<decimal> Original_AttorneyElseFeeNT, 
                    global::System.Nullable<decimal> Original_NotifyFee, 
                    global::System.Nullable<decimal> Original_NotifyFeeNT, 
                    string Original_MoneyKind, 
                    global::System.Nullable<decimal> Original_TranFee, 
                    global::System.Nullable<decimal> Original_WriteFee, 
                    global::System.Nullable<decimal> Original_SafeFee, 
                    global::System.Nullable<decimal> Original_AttorneyFeeNT, 
                    global::System.Nullable<decimal> Original_AttorneyGovFee, 
                    global::System.Nullable<decimal> Original_MeFee, 
                    global::System.Nullable<decimal> Original_Totall, 
                    global::System.Nullable<decimal> Original_QuotaTotal, 
                    string Original_SignDocument, 
                    global::System.Nullable<decimal> Original_ToNT, 
                    global::System.Nullable<decimal> Original_ToNTG, 
                    string Original_Remark, 
                    string Original_Remark_CHS, 
                    string Original_Remark_EN, 
                    string Original_MeRemark, 
                    string Original_MeRemark_CHS, 
                    string Original_MeRemark_EN, 
                    global::System.Nullable<decimal> Original_Gain, 
                    global::System.Nullable<bool> Original_LargeEntity, 
                    global::System.Nullable<bool> Original_ForStander, 
                    string Original_NofityContent, 
                    global::System.Nullable<decimal> Original_BeforeTotal, 
                    string Original_AfterProcess, 
                    global::System.Nullable<global::System.DateTime> Original_CreateDateTime, 
                    global::System.Nullable<global::System.DateTime> Original_LastModifyDateTime, 
                    int FeeSN) {
            if ((Sort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Sort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CountrySymbol == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CountrySymbol));
            }
            if ((KindSN == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(KindSN));
            }
            if ((ProcedureName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ProcedureName));
            }
            if ((ProcedureName_CHS == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ProcedureName_CHS));
            }
            if ((ProcedureName_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ProcedureName_EN));
            }
            if ((PhaseKEY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PhaseKEY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Examtime == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Examtime));
            }
            if ((GovFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(GovFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((GovFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(GovFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MoneyKindG == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(MoneyKindG));
            }
            if ((AttorneyKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(AttorneyKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AttorneyFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(AttorneyFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AttorneyELFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(AttorneyELFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AttorneyElseFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(AttorneyElseFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AttorneyElseFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(AttorneyElseFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NotifyFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(NotifyFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NotifyFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(NotifyFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((MoneyKind == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(MoneyKind));
            }
            if ((TranFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(TranFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((WriteFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(WriteFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((SafeFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(SafeFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((AttorneyFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(AttorneyFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((AttorneyGovFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(AttorneyGovFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((MeFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(MeFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Totall.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Totall.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((QuotaTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(QuotaTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SignDocument == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(SignDocument));
            }
            if ((ToNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(ToNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ToNTG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(ToNTG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Remark));
            }
            if ((Remark_CHS == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Remark_CHS));
            }
            if ((Remark_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Remark_EN));
            }
            if ((MeRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(MeRemark));
            }
            if ((MeRemark_CHS == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(MeRemark_CHS));
            }
            if ((MeRemark_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(MeRemark_EN));
            }
            if ((Gain.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Gain.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((LargeEntity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(LargeEntity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ForStander.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(ForStander.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((NofityContent == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(NofityContent));
            }
            if ((BeforeTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(BeforeTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((AfterProcess == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(AfterProcess));
            }
            if ((CreateDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(CreateDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((LastModifyDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(LastModifyDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_FeeSN));
            if ((Original_Sort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_Sort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_CountrySymbol == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_CountrySymbol));
            }
            if ((Original_KindSN == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_KindSN));
            }
            if ((Original_ProcedureName == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_ProcedureName));
            }
            if ((Original_ProcedureName_CHS == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_ProcedureName_CHS));
            }
            if ((Original_ProcedureName_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ProcedureName_EN));
            }
            if ((Original_PhaseKEY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_PhaseKEY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Examtime == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_Examtime));
            }
            if ((Original_GovFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Original_GovFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_GovFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(Original_GovFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_MoneyKindG == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_MoneyKindG));
            }
            if ((Original_AttorneyKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_AttorneyKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(Original_AttorneyFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyELFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(Original_AttorneyELFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyElseFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_AttorneyElseFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyElseFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(Original_AttorneyElseFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_NotifyFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_NotifyFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_NotifyFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Original_NotifyFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_MoneyKind == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_MoneyKind));
            }
            if ((Original_TranFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_TranFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_WriteFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_WriteFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_SafeFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_SafeFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyFeeNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(Original_AttorneyFeeNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_AttorneyGovFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(Original_AttorneyGovFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_MeFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Original_MeFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_Totall.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Original_Totall.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_QuotaTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_QuotaTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_SignDocument == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_SignDocument));
            }
            if ((Original_ToNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(Original_ToNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_ToNTG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(Original_ToNTG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_Remark));
            }
            if ((Original_Remark_CHS == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_Remark_CHS));
            }
            if ((Original_Remark_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_Remark_EN));
            }
            if ((Original_MeRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_MeRemark));
            }
            if ((Original_MeRemark_CHS == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_MeRemark_CHS));
            }
            if ((Original_MeRemark_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_MeRemark_EN));
            }
            if ((Original_Gain.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((decimal)(Original_Gain.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_LargeEntity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((bool)(Original_LargeEntity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_ForStander.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((bool)(Original_ForStander.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_NofityContent == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_NofityContent));
            }
            if ((Original_BeforeTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((decimal)(Original_BeforeTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_AfterProcess == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_AfterProcess));
            }
            if ((Original_CreateDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_CreateDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_LastModifyDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((System.DateTime)(Original_LastModifyDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[133].Value = ((int)(FeeSN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Sort, 
                    string CountrySymbol, 
                    string KindSN, 
                    string ProcedureName, 
                    string ProcedureName_CHS, 
                    string ProcedureName_EN, 
                    global::System.Nullable<int> PhaseKEY, 
                    string Examtime, 
                    global::System.Nullable<decimal> GovFee, 
                    global::System.Nullable<decimal> GovFeeNT, 
                    string MoneyKindG, 
                    global::System.Nullable<int> AttorneyKey, 
                    global::System.Nullable<decimal> AttorneyFee, 
                    global::System.Nullable<decimal> AttorneyELFeeNT, 
                    global::System.Nullable<decimal> AttorneyElseFee, 
                    global::System.Nullable<decimal> AttorneyElseFeeNT, 
                    global::System.Nullable<decimal> NotifyFee, 
                    global::System.Nullable<decimal> NotifyFeeNT, 
                    string MoneyKind, 
                    global::System.Nullable<decimal> TranFee, 
                    global::System.Nullable<decimal> WriteFee, 
                    global::System.Nullable<decimal> SafeFee, 
                    global::System.Nullable<decimal> AttorneyFeeNT, 
                    global::System.Nullable<decimal> AttorneyGovFee, 
                    global::System.Nullable<decimal> MeFee, 
                    global::System.Nullable<decimal> Totall, 
                    global::System.Nullable<decimal> QuotaTotal, 
                    string SignDocument, 
                    global::System.Nullable<decimal> ToNT, 
                    global::System.Nullable<decimal> ToNTG, 
                    string Remark, 
                    string Remark_CHS, 
                    string Remark_EN, 
                    string MeRemark, 
                    string MeRemark_CHS, 
                    string MeRemark_EN, 
                    global::System.Nullable<decimal> Gain, 
                    global::System.Nullable<bool> LargeEntity, 
                    global::System.Nullable<bool> ForStander, 
                    string NofityContent, 
                    global::System.Nullable<decimal> BeforeTotal, 
                    string AfterProcess, 
                    global::System.Nullable<global::System.DateTime> CreateDateTime, 
                    global::System.Nullable<global::System.DateTime> LastModifyDateTime, 
                    int Original_FeeSN, 
                    global::System.Nullable<int> Original_Sort, 
                    string Original_CountrySymbol, 
                    string Original_KindSN, 
                    string Original_ProcedureName, 
                    string Original_ProcedureName_CHS, 
                    string Original_ProcedureName_EN, 
                    global::System.Nullable<int> Original_PhaseKEY, 
                    string Original_Examtime, 
                    global::System.Nullable<decimal> Original_GovFee, 
                    global::System.Nullable<decimal> Original_GovFeeNT, 
                    string Original_MoneyKindG, 
                    global::System.Nullable<int> Original_AttorneyKey, 
                    global::System.Nullable<decimal> Original_AttorneyFee, 
                    global::System.Nullable<decimal> Original_AttorneyELFeeNT, 
                    global::System.Nullable<decimal> Original_AttorneyElseFee, 
                    global::System.Nullable<decimal> Original_AttorneyElseFeeNT, 
                    global::System.Nullable<decimal> Original_NotifyFee, 
                    global::System.Nullable<decimal> Original_NotifyFeeNT, 
                    string Original_MoneyKind, 
                    global::System.Nullable<decimal> Original_TranFee, 
                    global::System.Nullable<decimal> Original_WriteFee, 
                    global::System.Nullable<decimal> Original_SafeFee, 
                    global::System.Nullable<decimal> Original_AttorneyFeeNT, 
                    global::System.Nullable<decimal> Original_AttorneyGovFee, 
                    global::System.Nullable<decimal> Original_MeFee, 
                    global::System.Nullable<decimal> Original_Totall, 
                    global::System.Nullable<decimal> Original_QuotaTotal, 
                    string Original_SignDocument, 
                    global::System.Nullable<decimal> Original_ToNT, 
                    global::System.Nullable<decimal> Original_ToNTG, 
                    string Original_Remark, 
                    string Original_Remark_CHS, 
                    string Original_Remark_EN, 
                    string Original_MeRemark, 
                    string Original_MeRemark_CHS, 
                    string Original_MeRemark_EN, 
                    global::System.Nullable<decimal> Original_Gain, 
                    global::System.Nullable<bool> Original_LargeEntity, 
                    global::System.Nullable<bool> Original_ForStander, 
                    string Original_NofityContent, 
                    global::System.Nullable<decimal> Original_BeforeTotal, 
                    string Original_AfterProcess, 
                    global::System.Nullable<global::System.DateTime> Original_CreateDateTime, 
                    global::System.Nullable<global::System.DateTime> Original_LastModifyDateTime) {
            return this.Update(Sort, CountrySymbol, KindSN, ProcedureName, ProcedureName_CHS, ProcedureName_EN, PhaseKEY, Examtime, GovFee, GovFeeNT, MoneyKindG, AttorneyKey, AttorneyFee, AttorneyELFeeNT, AttorneyElseFee, AttorneyElseFeeNT, NotifyFee, NotifyFeeNT, MoneyKind, TranFee, WriteFee, SafeFee, AttorneyFeeNT, AttorneyGovFee, MeFee, Totall, QuotaTotal, SignDocument, ToNT, ToNTG, Remark, Remark_CHS, Remark_EN, MeRemark, MeRemark_CHS, MeRemark_EN, Gain, LargeEntity, ForStander, NofityContent, BeforeTotal, AfterProcess, CreateDateTime, LastModifyDateTime, Original_FeeSN, Original_Sort, Original_CountrySymbol, Original_KindSN, Original_ProcedureName, Original_ProcedureName_CHS, Original_ProcedureName_EN, Original_PhaseKEY, Original_Examtime, Original_GovFee, Original_GovFeeNT, Original_MoneyKindG, Original_AttorneyKey, Original_AttorneyFee, Original_AttorneyELFeeNT, Original_AttorneyElseFee, Original_AttorneyElseFeeNT, Original_NotifyFee, Original_NotifyFeeNT, Original_MoneyKind, Original_TranFee, Original_WriteFee, Original_SafeFee, Original_AttorneyFeeNT, Original_AttorneyGovFee, Original_MeFee, Original_Totall, Original_QuotaTotal, Original_SignDocument, Original_ToNT, Original_ToNTG, Original_Remark, Original_Remark_CHS, Original_Remark_EN, Original_MeRemark, Original_MeRemark_CHS, Original_MeRemark_EN, Original_Gain, Original_LargeEntity, Original_ForStander, Original_NofityContent, Original_BeforeTotal, Original_AfterProcess, Original_CreateDateTime, Original_LastModifyDateTime, Original_FeeSN);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PhaseTTableAdapter _phaseTTableAdapter;
        
        private nTriffTTableAdapter _nTriffTTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PhaseTTableAdapter PhaseTTableAdapter {
            get {
                return this._phaseTTableAdapter;
            }
            set {
                this._phaseTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public nTriffTTableAdapter nTriffTTableAdapter {
            get {
                return this._nTriffTTableAdapter;
            }
            set {
                this._nTriffTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._phaseTTableAdapter != null) 
                            && (this._phaseTTableAdapter.Connection != null))) {
                    return this._phaseTTableAdapter.Connection;
                }
                if (((this._nTriffTTableAdapter != null) 
                            && (this._nTriffTTableAdapter.Connection != null))) {
                    return this._nTriffTTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._phaseTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nTriffTTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSet_Triff dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._phaseTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PhaseT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._phaseTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nTriffTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.nTriffT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nTriffTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSet_Triff dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._phaseTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PhaseT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._phaseTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nTriffTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.nTriffT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nTriffTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSet_Triff dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._nTriffTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.nTriffT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nTriffTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._phaseTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PhaseT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._phaseTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSet_Triff dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._phaseTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._phaseTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._nTriffTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nTriffTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._phaseTTableAdapter != null)) {
                    revertConnections.Add(this._phaseTTableAdapter, this._phaseTTableAdapter.Connection);
                    this._phaseTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._phaseTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._phaseTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._phaseTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._phaseTTableAdapter.Adapter);
                    }
                }
                if ((this._nTriffTTableAdapter != null)) {
                    revertConnections.Add(this._nTriffTTableAdapter, this._nTriffTTableAdapter.Connection);
                    this._nTriffTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._nTriffTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._nTriffTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nTriffTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nTriffTTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._phaseTTableAdapter != null)) {
                    this._phaseTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._phaseTTableAdapter]));
                    this._phaseTTableAdapter.Transaction = null;
                }
                if ((this._nTriffTTableAdapter != null)) {
                    this._nTriffTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._nTriffTTableAdapter]));
                    this._nTriffTTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591